{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for the resources."
      }
    },
    "uniqueSolutionPrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix used for resource names. Should be unique as this will also be used for domain names."
      }
    },
    "openIdAuthority": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The Open ID Authority"
      }
    },
    "openIdMetadataURL": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The Open ID metadata Url from the Identity provider"
      }
    },
    "clientId": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The client ID for the B2C tenant"
      }
    },
    "apiClientId": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The API client ID for the B2C tenant"
      }
    },
    "isLoRaFeatureEnabled": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "Indicate whether the LoRa Features should be activated on the UI (default: true)."
      }
    }
  },
  "variables": {
    "iotHubName": "[concat(parameters('uniqueSolutionPrefix'), 'hub')]",
    "dpsName": "[concat(parameters('uniqueSolutionPrefix'), 'dps')]",
    "siteName": "[concat(parameters('uniqueSolutionPrefix'), 'portal')]",
    "servicePlanName": "[concat(parameters('uniqueSolutionPrefix'), 'asp')]",
    "functionAppName": "[concat(parameters('uniqueSolutionPrefix'), 'function')]",
    "storageAccountName": "[concat(parameters('uniqueSolutionPrefix'), 'storage')]",
    "iotHubOwnerPolicyName": "iothubowner",
    "provisioningserviceownerPolicyName": "provisioningserviceowner",
    "deviceImageContainerName": "device-images",
    "iamScopeName": "API.Access",
    "storageAccountId": "[concat(resourceGroup().id, '/providers/', 'Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "appInsightName": "[concat(parameters('uniqueSolutionPrefix'), 'insight')]",
    "functionAppDefaultHost": "[concat(resourceId('Microsoft.Web/sites', variables('functionAppName')), '/host/default/')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/default/{1}', variables('storageAccountName'), variables('deviceImageContainerName'))]"
    },
    {
      "type": "Microsoft.Devices/provisioningServices",
      "apiVersion": "2021-10-15",
      "name": "[variables('dpsName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "state": "Active",
        "iotHubs": [
          {
            "connectionString": "[concat('HostName=', variables('iotHubName'), '.azure-devices.net;SharedAccessKeyName=', variables('iotHubOwnerPolicyName'), ';SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs/IotHubKeys', variables('iotHubName'), variables('iotHubOwnerPolicyName')), '2021-07-02').primaryKey)]",
            "location": "[parameters('location')]"
          }
        ],
        "allocationPolicy": "Hashed"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('servicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "B1",
        "tier": "Basic",
        "size": "B1",
        "family": "B",
        "capacity": 1
      },
      "kind": "linux",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('siteName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Devices/provisioningServices', variables('dpsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('servicePlanName'))]"
      ],
      "kind": "app,linux,container",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('siteName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('siteName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('servicePlanName'))]",
        "reserved": true,
        "siteConfig": {
          "numberOfWorkers": 1,
          "linuxFxVersion": "DOCKER|ghcr.io/cgi-fr/iothub-portal:latest",
          "connectionStrings": [
            {
              "name": "IoTHub__ConnectionString",
              "type": "Custom",
              "connectionString": "[concat('HostName=', variables('iotHubName'), '.azure-devices.net;SharedAccessKeyName=', variables('iotHubOwnerPolicyName'), ';SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/iotHubs/iotHubKeys', variables('iotHubName'), variables('iotHubOwnerPolicyName')), '2021-07-02').primaryKey)]"
            },
            {
              "name": "IoTDPS__ConnectionString",
              "type": "Custom",
              "connectionString": "[concat('HostName=', variables('dpsName'), '.azure-devices-provisioning.net;SharedAccessKeyName=', variables('provisioningserviceownerPolicyName'), ';SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/provisioningServices/keys', variables('dpsName'), variables('provisioningserviceownerPolicyName')), '2021-10-15').primaryKey)]"
            },
            {
              "name": "StorageAccount__ConnectionString",
              "type": "Custom",
              "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "LoRaKeyManagement__Code",
              "type": "Custom",
              "connectionString": "[listkeys(variables('functionAppDefaultHost'),'2021-02-01').masterKey]"
            }
          ],
          "appSettings": [
            {
              "name": "IoTDPS__ServiceEndpoint",
              "value": "[concat(variables('dpsName'), '.azure-devices-provisioning.net')]"
            },
            {
              "name": "IoTDPS__IDScope",
              "value": "[reference(variables('dpsName')).idScope]"
            },
            {
              "name": "LoRaKeyManagement__Url",
              "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net')]"
            },
            {
              "name": "OIDC__ApiClientId",
              "value": "[parameters('apiClientId')]"
            },
            {
              "name": "OIDC__ClientId",
              "value": "[parameters('clientId')]"
            },
            {
              "name": "OIDC__Authority",
              "value": "[parameters('openIdAuthority')]"
            },
            {
              "name": "OIDC__MetadataUrl",
              "value": "[parameters('openIdMetadataURL')]"
            },
            {
              "name": "OIDC__Scope",
              "value": "[variables('iamScopeName')]"
            },
            {
              "name": "LoRaFeature__Enabled",
              "value": "[parameters('isLoRaFeatureEnabled')]"
            },
            {
              "name": "LoRaRegionRouterConfig__Url",
              "value": "https://raw.githubusercontent.com/Azure/iotedge-lorawan-starterkit/dev/Tools/Cli-LoRa-Device-Provisioning/DefaultRouterConfig/"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2020-02-02', 'Full').properties.InstrumentationKey]"
            }
          ]
        },
        "httpsOnly": true,
        "storageAccountRequired": false
      }
    }
  ]
}