AWSTemplateFormatVersion: 2010-09-09
Description: Application Runner template

Parameters:
  serviceName:
    Type: String
    Description: Name for the App Runner service
  memory:
    Type: String
    AllowedPattern: '2048|3072|4096|(2|3|4) GB'
    Description: The amount of memory, in MB or GB, reserved for each instance of your App Runner service.
    Default: 2 GB
  imageIdentifier:
    Type: String
    Description: The docker image identifier
    #Default: public.ecr.aws/d7e3t8n4/iothub-portal:latest
    Default: public.ecr.aws/nginx/nginx:1-alpine-perl
    AllowedPattern: '([0-9]{12}.dkr.ecr.[a-z\-]+-[0-9]{1}.amazonaws.com\/((?:[a-z0-9]+(?:[._-][a-z0-9]+)*\/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)(:([\w\d+\-=._:\/@])+|@([\w\d\:]+))?)|(^public\.ecr\.aws\/.+\/((?:[a-z0-9]+(?:[._-][a-z0-9]+)*\/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)(:([\w\d+\-=._:\/@])+|@([\w\d\:]+))?)'
  dBName:
      Type: String
      Default: cgigeiotdemo
      Description: Database name
      MinLength: '1'
      MaxLength: '64'
      AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
      ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  pgsqlAdminLogin:
      Type: String
      Description: PostgreSQL user
      MinLength: '1'
      MaxLength: '30'
  pgsqlAdminPassword:
      Type: String
      NoEcho: 'true'
      Description: PostgreSQL password
      MinLength: '8'
      MaxLength: '41'
  pgsqlHostName:
    Type: String
    Description: 'PostgreSQL Host name. Ex: {myHostName}.rds.amazonaws.com'
    Default: pgdbinstance.cko0iojqijil
  regionCode:
    Type: String
    Description: Region code
    Default: eu-west-1
  bucketName:
    Type: String
    Description: Bucket Name
    Default: bucket-iothub
  awsAccess:
    Type: String
    Description: Access Sectet
    Default: AKIAYNSSUPFL2XLIGTWM
  awsAccessSecretkey:
    Type: String
    Description: Bucket Name
    Default: <Secret>
  openIdApiClientId:
    Type: String 
    Description: The Open ID API client ID for the B2C tenant
    Default: iot-portal-api
  openIdClientId:
    Type: String 
    Description: The Open ID client ID for the B2C tenant
    Default: iot-portal
  openIdAuthority:
    Type: String 
    Description: The Open ID Authority
    Default: https://cgigeiotdemoauth.azurewebsites.net/auth/realms/iot-portal
  openIdMetadataURL:
    Type: String 
    Description: The Open ID metadata Url from the Identity provider
    Default: https://cgigeiotdemoauth.azurewebsites.net/auth/realms/iot-portal/.well-known/openid-configuration
  openIdScopeName:
    Type: String 
    Description: The Open ID Scope name
    Default: iot_access

Resources:
  AppRunnerService:
    Type: AWS::AppRunner::Service
    Properties:
      ServiceName: !Ref serviceName
      InstanceConfiguration:
        Memory: !Ref memory
        InstanceRoleArn: arn:aws:iam::578920151383:role/aws-service-role/apprunner.amazonaws.com/AWSServiceRoleForAppRunner
      HealthCheckConfiguration:
        Protocol: "HTTP"
        Path: "/"
        Interval: 20
        Timeout: 5
        HealthyThreshold: 2
        UnhealthyThreshold: 5
      SourceConfiguration:
        AutoDeploymentsEnabled: false
        ImageRepository: 
          ImageConfiguration: 
            Port: 80 # This is The port that your application listens to in the container. It can be changed (To see)
            RuntimeEnvironmentSecrets: 
              - Name: AWS__S3Storage__ConnectionString
                Value: !Sub https://s3.${regionCode}.amazonaws.com/${bucketName}
              - Name: AWS:Access
                Value: !Sub ${awsAccess}
              - Name: AWS__AccessSecret
                Value: !Sub ${awsAccessSecretkey}
              - Name: AWS__Region
                Value: !Sub ${regionCode}
              - Name: PostgreSQL__ConnectionString
                Value: !Sub 'Server=${pgsqlHostName}.rds.amazonaws.com;Port=5432;Database=${dBName};User Id=${pgsqlAdminLogin};Password=${pgsqlAdminPassword};SslMode=Require'
            RuntimeEnvironmentVariables: 
              - Name: OIDC__ApiClientId
                Value: !Sub '${openIdApiClientId}'
              - Name: OIDC__ClientId
                Value: !Sub '${openIdClientId}'
              - Name: OIDC__Authority
                Value: !Sub '${openIdAuthority}'
              - Name: OIDC__MetadataUrl
                Value: !Sub '${openIdMetadataURL}'
              - Name: OIDC__Scope
                Value: !Sub '${openIdScopeName}'
              - Name: CloudProvider
                Value: AWS
          ImageIdentifier: !Ref imageIdentifier # Since we are using ECR_PUBLIC, we need to create mannually the ECR and put the ImageIdentifier here
          ImageRepositoryType: ECR_PUBLIC

          

