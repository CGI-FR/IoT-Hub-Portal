name: Build & Test

# Controls when the workflow will run
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    
jobs:
  build:
    name: Build & Test

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Restore Dotnet tools
      run: dotnet tool restore
      working-directory: src/
      
    - name: Restore dependencies
      run: dotnet restore
      working-directory: src/

    - name: Build
      run: dotnet build --no-restore
      working-directory: src/
    
    - name: Generate Open API documentation
      run: dotnet swagger tofile --output ./swagger.json AzureIoTHub.Portal/Server/bin/Debug/net6.0/AzureIoTHub.Portal.Server.dll v1
      working-directory: src/
    
    # Upload swagger docs to GitHub
    - uses: actions/upload-artifact@v2
      if: success()
      with:
        name: swagger-doc
        path: ./src/swagger.json

    - name: Run unit tests
      run: dotnet test --no-build --verbosity normal --logger trx --collect:"XPlat Code Coverage" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura AzureIoTHub.Portal.Server.Tests.Unit/AzureIoTHub.Portal.Server.Tests.Unit.csproj
      working-directory: src/

    # Upload test results as artifact
    - uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: test-results
        path: |
          src/AzureIoTHub.Portal.Server.Tests.Unit/TestResults

    - name: Upload to Codecov test reports
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: src/AzureIoTHub.Portal.Server.Tests.Unit/TestResults
        verbose: true # optional (default = false)

  add-openapi-docs: 
    name: Import OpenAPI to documentation
    runs-on: ubuntu-latest
    needs: [ build ]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
        with: 
          ref: 'docs/main'

      - uses: actions/setup-node@v2
        with:
          node-version: '14'
        
      - name: Install widdershins
        run: npm install -g widdershins

      - uses: actions/download-artifact@v2
        with:
          name: swagger-doc

      - name: Generate Open API Markdown
        run: widdershins --environment widdershins.json swagger.json -o open-api.md

      - name: Push Open API Markdown to GitHub
        uses: peter-evans/create-pull-request@v3
        with:
          base: 'docs/main'
          branch: 'docs/feature/open-api'
          commit-message: 'Adds auto-generated Open API doc.'
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Update API documentation'
          labels: 'documentation'
          team-reviewers: '@CGI-FR/azure-iot-portal-authors'
          body: | 
            Automated changes to the Open API documentation.
            This PR is related to the change **${{ github.event.head_commit.message }}** merged in **${{ github.event.head_commit.id }}**.
