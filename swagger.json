{
  "openapi": "3.0.1",
  "info": {
    "title": "Azure IoT Hub Portal API",
    "description": "Available APIs for managing devices from Azure IoT Hub.",
    "version": "1.0"
  },
  "paths": {
    "/api/devices": {
      "get": {
        "tags": [
          "IoT Devices"
        ],
        "summary": "Gets the device list.",
        "operationId": "GET Device list",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceListItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IoT Devices"
        ],
        "summary": "Creates the device.",
        "operationId": "POST Create device",
        "requestBody": {
          "description": "The device.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "IoT Devices"
        ],
        "summary": "Updates the device.",
        "operationId": "PUT Update device",
        "requestBody": {
          "description": "The device.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/devices/{deviceID}": {
      "get": {
        "tags": [
          "IoT Devices"
        ],
        "summary": "Gets the specified device.",
        "operationId": "GET Device details",
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IoT Devices"
        ],
        "summary": "Deletes the specified device.",
        "operationId": "DELETE Remove device",
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/devices/{deviceID}/credentials": {
      "get": {
        "tags": [
          "IoT Devices"
        ],
        "summary": "Gets the device credentials.",
        "operationId": "GET Device Credentials",
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentCredentials"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentCredentials"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentCredentials"
                }
              }
            }
          }
        }
      }
    },
    "/api/edge/configurations": {
      "get": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "Gets the IoT Edge deployment configurations.",
        "operationId": "GET IoT Edge config list",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/edge/configurations/{configurationID}": {
      "get": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "Gets the specified configuration.",
        "operationId": "GET IoT Edge configuration",
        "parameters": [
          {
            "name": "configurationID",
            "in": "path",
            "description": "The configuration identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigListItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigListItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigListItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/edge/device": {
      "get": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "Gets the IoT Edge device list.",
        "operationId": "GET IoT Edge devices",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IoTEdgeListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IoTEdgeListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IoTEdgeListItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "Creates the IoT Edge device.",
        "operationId": "POST Create IoT Edge",
        "requestBody": {
          "description": "The IoT Edge device.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IoTEdgeDevice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IoTEdgeDevice"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IoTEdgeDevice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "Updates the device.",
        "operationId": "PUT Update IoT Edge",
        "requestBody": {
          "description": "The IoT Edge device.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IoTEdgeDevice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IoTEdgeDevice"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IoTEdgeDevice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/edge/device/{deviceId}": {
      "get": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "Gets the specified device.",
        "operationId": "GET IoT Edge device",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IoTEdgeDevice"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IoTEdgeDevice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IoTEdgeDevice"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "Deletes the device.",
        "operationId": "DELETE Remove IoT Edge",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/edge/device/{deviceId}/{moduleId}/{methodName}": {
      "post": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "Executes the module method on the IoT Edge device.",
        "operationId": "POST Execute module command",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "methodName",
            "in": "path",
            "description": "Name of the method.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The module.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IoTEdgeModule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IoTEdgeModule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IoTEdgeModule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/C2Dresult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C2Dresult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/C2Dresult"
                }
              }
            }
          }
        }
      }
    },
    "/api/edge/device/{deviceId}/credentials": {
      "get": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "Gets the IoT Edge device enrollement credentials.",
        "operationId": "GET Device enrollment credentials",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentCredentials"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentCredentials"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentCredentials"
                }
              }
            }
          }
        }
      }
    },
    "/api/lorawan/concentrators": {
      "get": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Gets all device concentrators.",
        "operationId": "GET LoRaWAN Concentrator list",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Concentrator"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Concentrator"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Concentrator"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Creates the device.",
        "operationId": "POST Create LoRaWAN concentrator",
        "requestBody": {
          "description": "The device.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Concentrator"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Concentrator"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Concentrator"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Updates the device.",
        "operationId": "PUT Update LoRaWAN concentrator",
        "requestBody": {
          "description": "The device.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Concentrator"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Concentrator"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Concentrator"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/lorawan/concentrators/{deviceId}": {
      "get": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Gets the device concentrator.",
        "operationId": "GET LoRaWAN Concentrator",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Concentrator"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Concentrator"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Concentrator"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Deletes the specified device.",
        "operationId": "DELETE Remove LoRaWAN concentrator",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/lorawan/devices": {
      "get": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Gets the device list.",
        "operationId": "GET LoRaWAN device list",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceListItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Creates the device.",
        "operationId": "POST Create LoRaWAN device",
        "requestBody": {
          "description": "The device.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoRaDeviceDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoRaDeviceDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoRaDeviceDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Updates the device.",
        "operationId": "PUT Update LoRaWAN device",
        "requestBody": {
          "description": "The device.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoRaDeviceDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoRaDeviceDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoRaDeviceDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/lorawan/devices/{deviceID}": {
      "get": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Gets the specified device.",
        "operationId": "GET LoRaWAN device details",
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoRaDeviceDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoRaDeviceDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoRaDeviceDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Deletes the specified device.",
        "operationId": "DELETE Remove LoRaWAN device",
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/lorawan/devices/{modelId}/{deviceId}/_command/{commandId}": {
      "post": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Executes the command on the device..",
        "operationId": "POST Execute LoRaWAN command",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "The model identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commandId",
            "in": "path",
            "description": "The command identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/lorawan/models": {
      "get": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Gets the device model list.",
        "operationId": "GET LoRaWAN device model list",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Creates the specified device model.",
        "operationId": "POST Create a new LoRaWAN device model",
        "requestBody": {
          "description": "The device model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoRaDeviceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoRaDeviceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoRaDeviceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/lorawan/models/{id}": {
      "get": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Get the device model details.",
        "operationId": "GET LoRaWAN device model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The devic emodel identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoRaDeviceModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoRaDeviceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoRaDeviceModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Updates the specified device model.",
        "operationId": "PUT Update the LoRaWAN device model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The device model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoRaDeviceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoRaDeviceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoRaDeviceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Deletes the specified device model.",
        "operationId": "DELETE Remove the LoRaWAN device model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device model identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/lorawan/models/{id}/avatar": {
      "get": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Gets the device model avatar.",
        "operationId": "GET LoRaWAN device model avatar URL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device model identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Changes the avatar.",
        "operationId": "POST Update the LoRaWAN device model avatar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Deletes the avatar.",
        "operationId": "DELETE Remove the LoRaWAN device model avatar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/lorawan/models/{id}/commands": {
      "post": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Updates the device model's commands.",
        "operationId": "POST Set device model commands",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The commands.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceModelCommand"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceModelCommand"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceModelCommand"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Gets the device model's commands.",
        "operationId": "GET Device model commands",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceModelCommand"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceModelCommand"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceModelCommand"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/lorawan/models/{id}/properties": {
      "get": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Gets the device model properties.",
        "operationId": "GET LoRaWAN Device model properties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device model properties",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceProperty"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceProperty"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceProperty"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "Sets the device model properties.",
        "operationId": "POST LoRaWAN Device model properties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device model properties",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model properties",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceProperty"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceProperty"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceProperty"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/models": {
      "get": {
        "tags": [
          "Device Models"
        ],
        "summary": "Gets the device model list.",
        "operationId": "GET Device model list",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Device Models"
        ],
        "summary": "Creates the specified device model.",
        "operationId": "POST Create a new device model",
        "requestBody": {
          "description": "The device model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/{id}": {
      "get": {
        "tags": [
          "Device Models"
        ],
        "summary": "Get the device model details.",
        "operationId": "GET Device model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The devic emodel identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Device Models"
        ],
        "summary": "Updates the specified device model.",
        "operationId": "PUT Update the device model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The device model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Device Models"
        ],
        "summary": "Deletes the specified device model.",
        "operationId": "DELETE Remove the device model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device model identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/{id}/avatar": {
      "get": {
        "tags": [
          "Device Models"
        ],
        "summary": "Gets the device model avatar.",
        "operationId": "GET Device model avatar URL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device model identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Device Models"
        ],
        "summary": "Changes the avatar.",
        "operationId": "POST Update the device model avatar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Device Models"
        ],
        "summary": "Deletes the avatar.",
        "operationId": "DELETE Remove the device model avatar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/{id}/properties": {
      "get": {
        "tags": [
          "Device Models"
        ],
        "summary": "Gets the device model properties.",
        "operationId": "GET Device model properties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device model properties",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceProperty"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceProperty"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceProperty"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Device Models"
        ],
        "summary": "Sets the device model properties.",
        "operationId": "POST Device model properties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The device model properties",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model properties",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceProperty"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceProperty"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceProperty"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/settings/device-tags": {
      "post": {
        "tags": [
          "Portal Settings"
        ],
        "summary": "Updates the device tag settings to be used in the application.",
        "operationId": "POST Update the Device tags settings",
        "requestBody": {
          "description": "List of tags.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceTag"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceTag"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceTag"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Portal Settings"
        ],
        "summary": "Gets the device tag settings to be used in the application",
        "operationId": "GET Device tags settings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceTag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/settings/lora": {
      "get": {
        "tags": [
          "Portal Settings"
        ],
        "summary": "Get the a boolean for LoRa feature enable on the portal or not.",
        "operationId": "GET LoRa settings",
        "responses": {
          "200": {
            "description": "Returns the LoRa support setting."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/settings/oidc": {
      "get": {
        "tags": [
          "Portal Settings"
        ],
        "summary": "Get the Open ID Settings.",
        "operationId": "GET Open ID settings",
        "responses": {
          "200": {
            "description": "Returns the OIDC settings."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/settings/version": {
      "get": {
        "tags": [
          "Portal Settings"
        ],
        "summary": "Get the portal version.",
        "operationId": "GET Portal Version",
        "responses": {
          "200": {
            "description": "The server version."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "C2Dresult": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "string",
            "description": "The C2D result payload.",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "The C2D status.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Channel": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "A value indicating whether the channel is enabled.",
            "nullable": true
          },
          "freq": {
            "type": "integer",
            "description": "The frequency.",
            "format": "int32"
          },
          "radio": {
            "type": "integer",
            "description": "The radio.",
            "format": "int32"
          },
          "if": {
            "type": "integer",
            "description": "The interface.",
            "format": "int32"
          },
          "bandwidth": {
            "type": "integer",
            "description": "The bandwidth.",
            "format": "int32"
          },
          "spreadFactor": {
            "type": "integer",
            "description": "The spread factor.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Concentrator": {
        "required": [
          "deviceId",
          "deviceName",
          "loraRegion"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "pattern": "^[A-F0-9]{16}$",
            "type": "string",
            "description": "The device identifier."
          },
          "deviceName": {
            "type": "string",
            "description": "The name of the device."
          },
          "loraRegion": {
            "type": "string",
            "description": "The lora region."
          },
          "deviceType": {
            "type": "string",
            "description": "The type of the device.",
            "nullable": true
          },
          "clientCertificateThumbprint": {
            "type": "string",
            "description": "The client certificate thumbprint.",
            "nullable": true
          },
          "isConnected": {
            "type": "boolean",
            "description": "`true` if this instance is connected; otherwise, `false`."
          },
          "isEnabled": {
            "type": "boolean",
            "description": "`true` if this instance is enabled; otherwise, `false`."
          },
          "alreadyLoggedInOnce": {
            "type": "boolean",
            "description": "`true` if [already logged in once]; otherwise, `false`."
          },
          "routerConfig": {
            "$ref": "#/components/schemas/RouterConfig"
          }
        },
        "additionalProperties": false
      },
      "ConfigItem": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The IoT Edge configuration name."
          },
          "dateCreation": {
            "type": "string",
            "description": "The IoT Edge configuration creation date.",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "The IoT Edge configuration status.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfigListItem": {
        "type": "object",
        "properties": {
          "configurationID": {
            "type": "string",
            "description": "The IoT Edge configuration identifier.",
            "nullable": true
          },
          "conditions": {
            "type": "string",
            "description": "The IoT Edge configuration target conditions.",
            "nullable": true
          },
          "metricsTargeted": {
            "type": "integer",
            "description": "The IoT Edge configuration targeted metrics.",
            "format": "int64"
          },
          "metricsApplied": {
            "type": "integer",
            "description": "The IoT Edge configuration applied metrics.",
            "format": "int64"
          },
          "metricsSuccess": {
            "type": "integer",
            "description": "The IoT Edge configuration success metrics.",
            "format": "int64"
          },
          "metricsFailure": {
            "type": "integer",
            "description": "The IoT Edge configuration failure metrics.",
            "format": "int64"
          },
          "priority": {
            "type": "integer",
            "description": "The IoT Edge configuration priority.",
            "format": "int32"
          },
          "creationDate": {
            "type": "string",
            "description": "The IoT Edge configuration creation date.",
            "format": "date-time"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IoTEdgeModule"
            },
            "description": "The IoT Edge modules configuration.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceDetails": {
        "required": [
          "deviceID",
          "deviceName",
          "modelId"
        ],
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "string",
            "description": "The device identifier."
          },
          "deviceName": {
            "type": "string",
            "description": "The name of the device."
          },
          "modelId": {
            "type": "string",
            "description": "The model identifier."
          },
          "imageUrl": {
            "type": "string",
            "description": "The device model image Url.",
            "nullable": true
          },
          "isConnected": {
            "type": "boolean",
            "description": "`true` if this instance is connected; otherwise, `false`."
          },
          "isEnabled": {
            "type": "boolean",
            "description": "`true` if this instance is enabled; otherwise, `false`."
          },
          "statusUpdatedTime": {
            "type": "string",
            "description": "The status updated time.",
            "format": "date-time"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "List of custom device tags and their values.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceListItem": {
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "string",
            "description": "The device Identifier.",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "description": "The device friendly name.",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "The device model image Url.",
            "nullable": true
          },
          "isConnected": {
            "type": "boolean",
            "description": "A value indicating whether the device is currently connected."
          },
          "isEnabled": {
            "type": "boolean",
            "description": "A value indicating whether the device is enabled on the platform."
          },
          "supportLoRaFeatures": {
            "type": "boolean",
            "description": "A value indicating whether the LoRa features is supported on this model."
          },
          "statusUpdatedTime": {
            "type": "string",
            "description": "The device last status updated time.",
            "format": "date-time"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "A list of searchable tags and their values.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "description": "The device model identifier.",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "The device model image Url.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The device model name."
          },
          "description": {
            "type": "string",
            "description": "The device model description.",
            "nullable": true
          },
          "isBuiltin": {
            "type": "boolean",
            "description": "A value indicating whether this instance is builtin."
          },
          "supportLoRaFeatures": {
            "type": "boolean",
            "description": "A value indicating whether the LoRa features is supported on this model."
          }
        },
        "additionalProperties": false
      },
      "DeviceModelCommand": {
        "required": [
          "frame",
          "name",
          "port"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The command name."
          },
          "frame": {
            "type": "string",
            "description": "The command frame in hexa."
          },
          "port": {
            "maximum": 223,
            "minimum": 1,
            "type": "integer",
            "description": "The LoRa WAN port.",
            "format": "int32"
          },
          "isBuiltin": {
            "type": "boolean",
            "description": "A value indicating whether this instance is builtin."
          }
        },
        "additionalProperties": false
      },
      "DeviceProperty": {
        "required": [
          "displayName",
          "isWritable",
          "name",
          "propertyType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The property name"
          },
          "displayName": {
            "type": "string",
            "description": "The property display name"
          },
          "isWritable": {
            "type": "boolean",
            "description": "Indicates whether the property is writable from the portal\r\n> Note: if writable, the property is set to the desired properties of the device twin\r\n>       otherwise, the property is read from the reported properties."
          },
          "propertyType": {
            "enum": [
              "Boolean",
              "Double",
              "Float",
              "Integer",
              "Long",
              "String"
            ],
            "type": "string",
            "description": "The device property type"
          }
        },
        "additionalProperties": false
      },
      "DeviceTag": {
        "required": [
          "label",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "^[a-zA-Z0-9]*$",
            "type": "string",
            "description": "The registered name in the device twin."
          },
          "label": {
            "type": "string",
            "description": "The label shown to the user."
          },
          "required": {
            "type": "boolean",
            "description": "Whether the field is required when creating a new device or not."
          },
          "searchable": {
            "type": "boolean",
            "description": "Whether the field can be searcheable via the device search panel or not."
          }
        },
        "additionalProperties": false
      },
      "EnrollmentCredentials": {
        "type": "object",
        "properties": {
          "registrationID": {
            "type": "string",
            "nullable": true
          },
          "symmetricKey": {
            "type": "string",
            "nullable": true
          },
          "scopeID": {
            "type": "string",
            "nullable": true
          },
          "provisioningEndpoint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IoTEdgeDevice": {
        "required": [
          "deviceId",
          "type"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "The IoT Edge identifier."
          },
          "connectionState": {
            "type": "string",
            "description": "The IoT Edge connection state.",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "description": "The IoT Edge scope tag value.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The IoT Edge device type."
          },
          "status": {
            "type": "string",
            "description": "The IoT Edge device status.",
            "nullable": true
          },
          "runtimeResponse": {
            "type": "string",
            "description": "The IoT Edge runtime response.",
            "nullable": true
          },
          "nbDevices": {
            "type": "integer",
            "description": "The number of connected devices on IoT Edge device.",
            "format": "int32"
          },
          "nbModules": {
            "type": "integer",
            "description": "The number of modules on IoT Edge device.",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "description": "The IoT Edge environment tag value.",
            "nullable": true
          },
          "lastDeployment": {
            "$ref": "#/components/schemas/ConfigItem"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IoTEdgeModule"
            },
            "description": "The IoT Edge modules.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IoTEdgeListItem": {
        "required": [
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "The device identifier."
          },
          "status": {
            "type": "string",
            "description": "The device status.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The device type.",
            "nullable": true
          },
          "nbDevices": {
            "type": "integer",
            "description": "The number of devices connected on the IoT Edge.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IoTEdgeModule": {
        "required": [
          "moduleName"
        ],
        "type": "object",
        "properties": {
          "moduleName": {
            "type": "string",
            "description": "The module name."
          },
          "version": {
            "type": "string",
            "description": "The module configuration version.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "The module status.",
            "nullable": true
          },
          "environmentVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "The module environment variables.",
            "nullable": true
          },
          "moduleIdentityTwinSettings": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "The module identity twin settings.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoRaDeviceDetails": {
        "required": [
          "deviceID",
          "deviceName",
          "modelId"
        ],
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "string",
            "description": "The device identifier."
          },
          "deviceName": {
            "type": "string",
            "description": "The name of the device."
          },
          "modelId": {
            "type": "string",
            "description": "The model identifier."
          },
          "imageUrl": {
            "type": "string",
            "description": "The device model image Url.",
            "nullable": true
          },
          "isConnected": {
            "type": "boolean",
            "description": "`true` if this instance is connected; otherwise, `false`."
          },
          "isEnabled": {
            "type": "boolean",
            "description": "`true` if this instance is enabled; otherwise, `false`."
          },
          "statusUpdatedTime": {
            "type": "string",
            "description": "The status updated time.",
            "format": "date-time"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "List of custom device tags and their values.",
            "nullable": true
          },
          "useOTAA": {
            "type": "boolean",
            "description": "The status of OTAA setting."
          },
          "appEUI": {
            "type": "string",
            "description": "The device OTAA Application eui.",
            "nullable": true
          },
          "sensorDecoder": {
            "type": "string",
            "description": "The sensor decoder API Url.",
            "nullable": true
          },
          "gatewayID": {
            "type": "string",
            "description": "The GatewayID of the device.",
            "nullable": true
          },
          "downlink": {
            "type": "boolean",
            "description": "Allows disabling the downstream (cloud to device) for a device.\r\nBy default downstream messages are enabled.",
            "nullable": true
          },
          "preferredWindow": {
            "type": "integer",
            "description": "Allows setting the device preferred receive window (RX1 or RX2).\r\nThe default preferred receive window is 1.",
            "format": "int32",
            "nullable": true
          },
          "deduplication": {
            "type": "string",
            "description": "Allows controlling the handling of duplicate messages received by multiple gateways.\r\nThe default is None.",
            "nullable": true
          },
          "rX1DROffset": {
            "type": "integer",
            "description": "Allows setting an offset between received Datarate and retransmit datarate as specified in the LoRa Specifiations.\r\nValid for OTAA devices.\r\nIf an invalid value is provided the network server will use default value 0.",
            "format": "int32",
            "nullable": true
          },
          "rX2DataRate": {
            "type": "integer",
            "description": "Allows setting a custom Datarate for second receive windows.\r\nValid for OTAA devices.\r\nIf an invalid value is provided the network server will use default value 0 (DR0).",
            "format": "int32",
            "nullable": true
          },
          "rxDelay": {
            "type": "integer",
            "description": "Allows setting a custom wait time between receiving and transmission as specified in the specification.",
            "format": "int32",
            "nullable": true
          },
          "abpRelaxMode": {
            "type": "boolean",
            "description": "Allows to disable the relax mode when using ABP.\r\nBy default relaxed mode is enabled.",
            "nullable": true
          },
          "fCntUpStart": {
            "type": "integer",
            "description": "Allows to explicitly specify a frame counter up start value.\r\nIf the device joins, this value will be used to validate the first frame and initialize the server state for the device.",
            "format": "int32",
            "nullable": true
          },
          "fCntDownStart": {
            "type": "integer",
            "description": "Allows to explicitly specify a frame counter down start value.",
            "format": "int32",
            "nullable": true
          },
          "supports32BitFCnt": {
            "type": "boolean",
            "description": "Allow the usage of 32bit counters on your device.",
            "nullable": true
          },
          "fCntResetCounter": {
            "type": "integer",
            "description": "Allows to reset the frame counters to the FCntUpStart/FCntDownStart values respectively.",
            "format": "int32",
            "nullable": true
          },
          "keepAliveTimeout": {
            "type": "integer",
            "description": "Allows defining a sliding expiration to the connection between the leaf device and IoT/Edge Hub.\r\nThe default is none, which causes the connection to not be dropped.",
            "format": "int32",
            "nullable": true
          },
          "appKey": {
            "type": "string",
            "description": "The OTAA App Key.",
            "nullable": true
          },
          "appSKey": {
            "type": "string",
            "description": "The APB AppSKey.",
            "nullable": true
          },
          "nwkSKey": {
            "type": "string",
            "description": "The APB NwkSKey.",
            "nullable": true
          },
          "devAddr": {
            "type": "string",
            "description": "Unique identifier that allows\r\nthe device to be recognized.",
            "nullable": true
          },
          "alreadyLoggedInOnce": {
            "type": "boolean",
            "description": "A value indicating whether the device has already joined the platform."
          },
          "dataRate": {
            "type": "string",
            "description": "The Device Current Datarate,\r\nThis value will be only reported if you are using Adaptive Data Rate.",
            "nullable": true
          },
          "txPower": {
            "type": "string",
            "description": "The Device Current Transmit Power,\r\nThis value will be only reported if you are using Adaptive Data Rate.",
            "nullable": true
          },
          "nbRep": {
            "type": "string",
            "description": "The Device Current repetition when transmitting.\r\nE.g. if set to two, the device will transmit twice his upstream messages.\r\nThis value will be only reported if you are using Adaptive Data Rate.",
            "nullable": true
          },
          "reportedRX2DataRate": {
            "type": "string",
            "description": "The Device Current Rx2Datarate.",
            "nullable": true
          },
          "reportedRX1DROffset": {
            "type": "string",
            "description": "The Device Current RX1DROffset.",
            "nullable": true
          },
          "reportedRXDelay": {
            "type": "string",
            "description": "The Device Current RXDelay.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoRaDeviceModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "description": "The device model identifier.",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "The device model image Url.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The device model name."
          },
          "description": {
            "type": "string",
            "description": "The device model description.",
            "nullable": true
          },
          "isBuiltin": {
            "type": "boolean",
            "description": "A value indicating whether this instance is builtin."
          },
          "supportLoRaFeatures": {
            "type": "boolean",
            "description": "A value indicating whether the LoRa features is supported on this model."
          },
          "useOTAA": {
            "type": "boolean",
            "description": "The status of OTAA setting."
          },
          "appEUI": {
            "type": "string",
            "description": "The device OTAA Application eui.",
            "nullable": true
          },
          "sensorDecoder": {
            "type": "string",
            "description": "The sensor decoder API Url.",
            "nullable": true
          },
          "downlink": {
            "type": "boolean",
            "description": "Allows disabling the downstream (cloud to device) for a device.\r\nBy default downstream messages are enabled.",
            "nullable": true
          },
          "preferredWindow": {
            "type": "integer",
            "description": "Allows setting the device preferred receive window (RX1 or RX2).\r\nThe default preferred receive window is 1.",
            "format": "int32",
            "nullable": true
          },
          "deduplication": {
            "type": "string",
            "description": "Allows controlling the handling of duplicate messages received by multiple gateways.\r\nThe default is None.",
            "nullable": true
          },
          "rX1DROffset": {
            "type": "integer",
            "description": "Allows setting an offset between received Datarate and retransmit datarate as specified in the LoRa Specifiations.\r\nValid for OTAA devices.\r\nIf an invalid value is provided the network server will use default value 0.",
            "format": "int32",
            "nullable": true
          },
          "rX2DataRate": {
            "type": "integer",
            "description": "Allows setting a custom Datarate for second receive windows.\r\nValid for OTAA devices.\r\nIf an invalid value is provided the network server will use default value 0 (DR0).",
            "format": "int32",
            "nullable": true
          },
          "rxDelay": {
            "type": "integer",
            "description": "Allows setting a custom wait time between receiving and transmission as specified in the specification.",
            "format": "int32",
            "nullable": true
          },
          "abpRelaxMode": {
            "type": "boolean",
            "description": "Allows to disable the relax mode when using ABP.\r\nBy default relaxed mode is enabled.",
            "nullable": true
          },
          "fCntUpStart": {
            "type": "integer",
            "description": "Allows to explicitly specify a frame counter up start value.\r\nIf the device joins, this value will be used to validate the first frame and initialize the server state for the device.",
            "format": "int32",
            "nullable": true
          },
          "fCntDownStart": {
            "type": "integer",
            "description": "Allows to explicitly specify a frame counter down start value.",
            "format": "int32",
            "nullable": true
          },
          "supports32BitFCnt": {
            "type": "boolean",
            "description": "Allow the usage of 32bit counters on your device.",
            "nullable": true
          },
          "fCntResetCounter": {
            "type": "integer",
            "description": "Allows to reset the frame counters to the FCntUpStart/FCntDownStart values respectively.",
            "format": "int32",
            "nullable": true
          },
          "keepAliveTimeout": {
            "type": "integer",
            "description": "Allows defining a sliding expiration to the connection between the leaf device and IoT/Edge Hub.\r\nThe default is none, which causes the connection to not be dropped.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "RouterConfig": {
        "type": "object",
        "properties": {
          "netID": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The network identifier.",
            "nullable": true
          },
          "joinEui": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The join eui.",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "The region.",
            "nullable": true
          },
          "hwspec": {
            "type": "string",
            "description": "The hardware specifications.",
            "nullable": true
          },
          "freqRange": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The frequency range.",
            "nullable": true
          },
          "dRs": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "description": "The DRs.",
            "nullable": true
          },
          "sx1301Conf": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/Channel"
              }
            },
            "description": "The SX1301 conf.",
            "nullable": true
          },
          "nocca": {
            "type": "boolean",
            "description": "`true` if nocca; otherwise, `false`."
          },
          "nodc": {
            "type": "boolean",
            "description": "`true` if nodc; otherwise, `false`."
          },
          "nodwell": {
            "type": "boolean",
            "description": "`true` if nodwell; otherwise, `false`."
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "\n    Specify the authorization token got from your IDP as a header.\n    > Ex: ``Authorization: Bearer * ***``",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    { }
  ]
}