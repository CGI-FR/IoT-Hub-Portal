{
  "openapi": "3.0.1",
  "info": {
    "title": "Azure IoT Hub Portal API",
    "description": "Available APIs for managing devices from Azure IoT Hub.",
    "version": "1.0"
  },
  "paths": {
    "/api/devices": {
      "get": {
        "tags": [
          "IoT Devices"
        ],
        "summary": "Gets a list of devices as DeviceListItem from Azure IoT Hub.\r\nFields that do not appear in the device list are not defined here.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceListItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IoT Devices"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "IoT Devices"
        ],
        "summary": "this function update the twin and the device.",
        "requestBody": {
          "description": "the device object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/devices/{deviceID}": {
      "get": {
        "tags": [
          "IoT Devices"
        ],
        "summary": "Retrieve a specific device and from the IoT Hub.\r\nConverts it to a DeviceListItem.",
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "ID of the device to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IoT Devices"
        ],
        "summary": "this function delete a device.",
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "the device id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/devices/{deviceId}/{commandId}": {
      "post": {
        "tags": [
          "IoT Devices"
        ],
        "summary": "Permit to execute cloud to device message.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "id of the device.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commandId",
            "in": "path",
            "description": "the command who contain the name and the trame.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/edge/configurations": {
      "get": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "Gets a list of deployments as ConfigListItem from Azure IoT Hub.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/edge/configurations/{configurationID}": {
      "get": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "Retrieve a specific deployment and its modules from the IoT Hub.\r\nConverts it to a ConfigListItem.",
        "parameters": [
          {
            "name": "configurationID",
            "in": "path",
            "description": "ID of the deployment to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigListItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigListItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigListItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/edge/device": {
      "get": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "Fonction permettant de récupèrer la liste des appareils Edge .\r\nAprès avoir éxecuté la query du registryManager on récupère le resultat\r\nsous la forme d'une liste de Twin.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GatewayListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GatewayListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GatewayListItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "this function create a device with the twin information.",
        "requestBody": {
          "description": "the gateway object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gateway"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Gateway"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Gateway"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/edge/device/{deviceId}": {
      "get": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "This function return all the information we want of\r\na device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "the device id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Gateway"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gateway"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gateway"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "this function delete a device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "the device id to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/edge/device/{deviceId}/{deviceType}/ConnectionString": {
      "get": {
        "tags": [
          "IoT Edge"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/edge/device/{deviceId}/{moduleId}/{methodName}": {
      "post": {
        "tags": [
          "IoT Edge"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "methodName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GatewayModule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GatewayModule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GatewayModule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/C2Dresult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C2Dresult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/C2Dresult"
                }
              }
            }
          }
        }
      }
    },
    "/api/edge/device/{gateway}": {
      "put": {
        "tags": [
          "IoT Edge"
        ],
        "summary": "This function update the properties of a device.",
        "parameters": [
          {
            "name": "gateway",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "a gateways object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gateway"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Gateway"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Gateway"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/lorawan/concentrators": {
      "get": {
        "tags": [
          "LoRa WAN"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "LoRa WAN"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Concentrator"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Concentrator"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Concentrator"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "LoRa WAN"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Concentrator"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Concentrator"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Concentrator"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/lorawan/concentrators/{deviceId}": {
      "get": {
        "tags": [
          "LoRa WAN"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "LoRa WAN"
        ],
        "summary": "this function delete a device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "the device id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/models": {
      "get": {
        "tags": [
          "Device Models"
        ],
        "summary": "Gets a list of device models from an Azure DataTable.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Device Models"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Device Models"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/models/{deviceModelID}": {
      "delete": {
        "tags": [
          "Device Models"
        ],
        "parameters": [
          {
            "name": "deviceModelID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/models/{modelID}": {
      "get": {
        "tags": [
          "Device Models"
        ],
        "summary": "Get a specific device model from an Azure DataTable.",
        "parameters": [
          {
            "name": "modelID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/models/{modelID}/avatar": {
      "get": {
        "tags": [
          "Device Models"
        ],
        "parameters": [
          {
            "name": "modelID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Device Models"
        ],
        "parameters": [
          {
            "name": "modelID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Device Models"
        ],
        "parameters": [
          {
            "name": "modelID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/models/{modelId}/commands": {
      "post": {
        "tags": [
          "Device Models"
        ],
        "summary": "Add a command to an Azure DataTable.",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/models/{modelId}/commands/{commandId}": {
      "delete": {
        "tags": [
          "Device Models"
        ],
        "summary": "Delete a command from an Azure DataTable.",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commandId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/settings/oidc": {
      "get": {
        "tags": [
          "Portal Settings"
        ],
        "summary": "Get the Open ID Settings.",
        "operationId": "GET OIDC",
        "responses": {
          "200": {
            "description": "Returns the OIDC settings."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "C2Dresult": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Channel": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "nullable": true
          },
          "freq": {
            "type": "integer",
            "format": "int32"
          },
          "radio": {
            "type": "integer",
            "format": "int32"
          },
          "if": {
            "type": "integer",
            "format": "int32"
          },
          "bandwidth": {
            "type": "integer",
            "format": "int32"
          },
          "spread_factor": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Command": {
        "type": "object",
        "properties": {
          "commandId": {
            "type": "string",
            "nullable": true
          },
          "frame": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Concentrator": {
        "required": [
          "deviceId",
          "deviceName",
          "loraRegion"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "pattern": "^[A-F0-9]{16}$",
            "type": "string"
          },
          "deviceName": {
            "type": "string"
          },
          "loraRegion": {
            "type": "string"
          },
          "deviceType": {
            "type": "string",
            "nullable": true
          },
          "clientCertificateThumbprint": {
            "type": "string",
            "nullable": true
          },
          "isConnected": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "alreadyLoggedInOnce": {
            "type": "boolean"
          },
          "routerConfig": {
            "$ref": "#/components/schemas/RouterConfig"
          }
        },
        "additionalProperties": false
      },
      "ConfigItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "dateCreation": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfigListItem": {
        "type": "object",
        "properties": {
          "configurationID": {
            "type": "string",
            "nullable": true
          },
          "conditions": {
            "type": "string",
            "nullable": true
          },
          "metricsTargeted": {
            "type": "integer",
            "format": "int64"
          },
          "metricsApplied": {
            "type": "integer",
            "format": "int64"
          },
          "metricsSuccess": {
            "type": "integer",
            "format": "int64"
          },
          "metricsFailure": {
            "type": "integer",
            "format": "int64"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GatewayModule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceDetails": {
        "required": [
          "appEUI",
          "deviceID",
          "deviceName",
          "modelName"
        ],
        "type": "object",
        "properties": {
          "deviceID": {
            "pattern": "^[A-F0-9]{16}$",
            "type": "string"
          },
          "deviceName": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "isConnected": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "statusUpdatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "appEUI": {
            "type": "string"
          },
          "appKey": {
            "type": "string",
            "nullable": true
          },
          "locationCode": {
            "type": "string",
            "nullable": true
          },
          "assetId": {
            "type": "string",
            "nullable": true
          },
          "deviceType": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "modelName": {
            "type": "string"
          },
          "sensorDecoder": {
            "type": "string",
            "nullable": true
          },
          "alreadyLoggedInOnce": {
            "type": "boolean"
          },
          "commands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Command"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceListItem": {
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "string",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "isConnected": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "statusUpdatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "appEUI": {
            "type": "string",
            "nullable": true
          },
          "appKey": {
            "type": "string",
            "nullable": true
          },
          "locationCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceModel": {
        "required": [
          "appEUI",
          "name"
        ],
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "appEUI": {
            "type": "string"
          },
          "sensorDecoderURL": {
            "type": "string",
            "nullable": true
          },
          "commands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceModelCommand"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceModelCommand": {
        "required": [
          "frame",
          "name",
          "port"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "frame": {
            "type": "string"
          },
          "port": {
            "maximum": 223,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Gateway": {
        "required": [
          "deviceId",
          "type"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string"
          },
          "symmetricKey": {
            "type": "string",
            "nullable": true
          },
          "connectionState": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          },
          "endPoint": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "runtimeResponse": {
            "type": "string",
            "nullable": true
          },
          "nbDevices": {
            "type": "integer",
            "format": "int32"
          },
          "nbModules": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "lastDeployment": {
            "$ref": "#/components/schemas/ConfigItem"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GatewayModule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GatewayListItem": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "nbDevices": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GatewayModule": {
        "type": "object",
        "properties": {
          "moduleName": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "environmentVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "moduleIdentityTwinSettings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RouterConfig": {
        "type": "object",
        "properties": {
          "netID": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "joinEui": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "hwspec": {
            "type": "string",
            "nullable": true
          },
          "freq_range": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "dRs": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "nullable": true
          },
          "sx1301_conf": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/Channel"
              }
            },
            "nullable": true
          },
          "nocca": {
            "type": "boolean"
          },
          "nodc": {
            "type": "boolean"
          },
          "nodwell": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "\n    Specify the authorization token got from your IDP as a header.\n    > Ex: ``Authorization: Bearer * ***``",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    { }
  ]
}