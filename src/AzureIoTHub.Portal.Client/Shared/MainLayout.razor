@inherits LayoutComponentBase

@using AzureIoTHub.Portal.Models.v10

@inject PortalSettings Portal
@inject ILayoutService LayoutService

@implements IDisposable

<MudThemeProvider Theme="@Theme.CurrentTheme" IsDarkMode="@LayoutService.IsDarkMode" IsDarkModeChanged="LayoutService.SetDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<PageTitle>@Portal.PortalName</PageTitle>

<MudLayout>

    <MudAppBar Elevation="25">
        <Appbar />
    </MudAppBar>

    <MudDrawer @bind-Open="LayoutService.IsDrawerOpen" Elevation="25" ClipMode="DrawerClipMode.Always">
        <NavMenu />
    </MudDrawer>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False" Class="mt-4" Style="margin-bottom: 70px">
            @Body
        </MudContainer>
    </MudMainContent>

    <MudAppBar id="footer" Elevation="1" Style="top: auto; bottom: 0;" Dense="true">
        <PortalFooter />
    </MudAppBar>
</MudLayout>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
            
        if (firstRender)
        {
            // Load layout configuration from local storage
            await LayoutService.LoadLayoutConfigurationFromLocalStorage();
            StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {
        LayoutService.MajorUpdateOccurred += LayoutServiceOnMajorUpdateOccurred;
        base.OnInitialized();
    }

    public void Dispose()
    {
        LayoutService.MajorUpdateOccurred -= LayoutServiceOnMajorUpdateOccurred;
    }

    private void LayoutServiceOnMajorUpdateOccurred(object sender, EventArgs e) => StateHasChanged();
}
