@using AzureIoTHub.Portal.Models.v10
@using AzureIoTHub.Portal.Client.Services.AWS

@inject ISnackbar Snackbar
@inject IDeviceModelsClientService DeviceModelsClientService
@inject PortalSettings Portal
@inject IThingTypeClientService ThingTypeClientService

<MudDialog>
    <DialogContent>
        @if (Portal.CloudProvider.Equals("AWS"))
        {
            <p>Delete @thingTypeName ?</p>

        }
        else
        {
            <p>Delete @deviceModelName ?</p>

        }
        <br />
        <p><i>Warning : this cannot  be undone.</i></p>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="DeleteDevice">Delete</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    public Error Error { get; set; } = default!;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public string deviceModelID { get; set; } = default!;
    [Parameter] public string deviceModelName { get; set; } = default!;

    [Parameter] public string thingTypeID { get; set; } = default!;
    [Parameter] public string thingTypeName { get; set; } = default!;

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

    /// <summary>
    /// Sends a POST request to the DevicesController, to delete the device from the Azure IoT Hub
    /// </summary>
    /// <returns></returns>
    private async Task DeleteDevice()
    {
        try
        {
            if (Portal.CloudProvider.Equals("AWS"))
            {
                await ThingTypeClientService.DeleteThingType(thingTypeID);
                Snackbar.Add($"Thing Type {thingTypeName} has been successfully deleted!", Severity.Success);
            }
            else
            {
                await DeviceModelsClientService.DeleteDeviceModel(deviceModelID);
                Snackbar.Add($"Device model {deviceModelName} has been successfully deleted!", Severity.Success);
            }

            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (ProblemDetailsException exception)
        {
            Error?.ProcessProblemDetails(exception);
        }
    }
}
