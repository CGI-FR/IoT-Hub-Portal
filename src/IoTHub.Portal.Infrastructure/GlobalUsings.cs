// Copyright (c) CGI France. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

global using System.Collections.ObjectModel;
global using System.Globalization;
global using System.Linq.Dynamic.Core;
global using System.Linq.Expressions;
global using System.Net;
global using System.Net.Http.Headers;
global using System.Net.Http.Json;
global using System.Reflection;
global using System.Security.Cryptography;
global using System.Text;
global using System.Text.Json;
global using System.Text.Json.Serialization;
global using System.Text.RegularExpressions;
global using Amazon;
global using Amazon.GreengrassV2;
global using Amazon.GreengrassV2.Model;
global using Amazon.IoT;
global using Amazon.IoT.Model;
global using Amazon.IotData;
global using Amazon.IotData.Model;
global using Amazon.S3;
global using Amazon.S3.Model;
global using Amazon.SecretsManager;
global using Amazon.SecretsManager.Model;
global using AutoMapper;
global using Azure;
global using Azure.Data.Tables;
global using Azure.Messaging.EventHubs;
global using Azure.Messaging.EventHubs.Processor;
global using Azure.Storage.Blobs;
global using Azure.Storage.Blobs.Models;
global using IoTHub.Portal.Application.Helpers;
global using IoTHub.Portal.Application.Managers;
global using IoTHub.Portal.Application.Mappers;
global using IoTHub.Portal.Application.Providers;
global using IoTHub.Portal.Application.Services;
global using IoTHub.Portal.Application.Wrappers;
global using IoTHub.Portal.Crosscutting.Extensions;
global using IoTHub.Portal.Domain;
global using IoTHub.Portal.Domain.Base;
global using IoTHub.Portal.Domain.Entities;
global using IoTHub.Portal.Domain.Exceptions;
global using IoTHub.Portal.Domain.Options;
global using IoTHub.Portal.Domain.Repositories;
global using IoTHub.Portal.Domain.Shared;
global using IoTHub.Portal.Domain.Shared.Constants;
global using IoTHub.Portal.Infrastructure.Extensions;
global using IoTHub.Portal.Infrastructure.Helpers;
global using IoTHub.Portal.Infrastructure.Jobs;
global using IoTHub.Portal.Infrastructure.Jobs.AWS;
global using IoTHub.Portal.Infrastructure.Managers;
global using IoTHub.Portal.Infrastructure.Mappers;
global using IoTHub.Portal.Infrastructure.Repositories;
global using IoTHub.Portal.Infrastructure.Services;
global using IoTHub.Portal.Infrastructure.Services.AWS;
global using IoTHub.Portal.Infrastructure.ServicesHealthCheck;
global using IoTHub.Portal.Models.v10;
global using IoTHub.Portal.Models.v10.LoRaWAN;
global using IoTHub.Portal.Shared.Constants;
global using IoTHub.Portal.Shared.Models;
global using IoTHub.Portal.Shared.Models.v1._0;
global using IoTHub.Portal.Shared.Models.v10;
global using IoTHub.Portal.Shared.Models.v10.Filters;
global using IoTHub.Portal.Infrastructure.Providers;
global using IoTHub.Portal.Infrastructure.Wrappers;
global using Microsoft.AspNetCore.DataProtection.EntityFrameworkCore;
global using Microsoft.AspNetCore.Http;
global using Microsoft.Azure.Devices;
global using Microsoft.Azure.Devices.Common.Exceptions;
global using Microsoft.Azure.Devices.Provisioning.Service;
global using Microsoft.Azure.Devices.Shared;
global using Microsoft.EntityFrameworkCore;
global using Microsoft.Extensions.Configuration;
global using Microsoft.Extensions.DependencyInjection;
global using Microsoft.Extensions.Diagnostics.HealthChecks;
global using Microsoft.Extensions.Hosting;
global using Microsoft.Extensions.Logging;
global using Microsoft.Extensions.Options;
global using Newtonsoft.Json;
global using Newtonsoft.Json.Linq;
global using Prometheus;
global using Quartz;
global using Quartz.Util;
global using Polly;
global using Polly.Extensions.Http;
global using EntityFramework.Exceptions.PostgreSQL;
global using Metrics = Prometheus.Metrics;
