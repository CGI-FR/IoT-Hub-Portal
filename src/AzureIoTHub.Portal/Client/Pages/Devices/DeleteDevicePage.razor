@using AzureIoTHub.Portal.Shared.Models.V10.Device

@inject HttpClient Http
@inject IJSRuntime JS
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <p>Delete @deviceID ?</p>
        <br />
        <p><i>Warning : this cannot  be undone.</i></p>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="DeleteDevice">Delete</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public string deviceID { get; set; }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

    /// <summary>
    /// Sends a POST request to the DevicesController, to delete the device from the Azure IoT Hub
    /// </summary>
    /// <returns></returns>
    private async Task DeleteDevice()
    {
        // var response = await Http.PostAsJsonAsync<DeviceListItem>($"Devices/delete", device);
        var response = await Http.DeleteAsync($"api/Devices/{deviceID}");

        // Prompts a snack bar to inform if the action was successful
        // TODO : Deal more effectively with error/success messages
        if (!response.IsSuccessStatusCode)
        {
            Snackbar.Add($"Oh oh, something went wrong while deleting device {deviceID}... ", Severity.Error);
            return;
        }

        Snackbar.Add($"Device {deviceID} has been successfully deleted!", Severity.Success);
        MudDialog.Close(DialogResult.Ok(true));
    }
}