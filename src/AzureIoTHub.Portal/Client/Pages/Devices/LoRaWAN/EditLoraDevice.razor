@using AzureIoTHub.Portal.Client.Validators
@using AzureIoTHub.Portal.Shared.Models.v10.LoRaWAN
@using AzureIoTHub.Portal.Shared.Models.v10.LoRaWAN.LoRaDevice
@using AzureIoTHub.Portal.Shared.Models.v10.LoRaWAN.LoRaDeviceModel

@inject HttpClient Http
@inject ISnackbar Snackbar

<MudItem xs="12">
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>
                <MudText>LoRaWAN</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudGrid>
                <MudItem xs="12" md="6">
                    <MudGrid>
                        @if (LoRaDevice.UseOTAA)
                        {
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="@LoRaDevice.AppEUI" Label="OTAA App EUI" For="@(() => LoRaDevice.AppEUI)" ReadOnly="true" Variant="Variant.Outlined" Required="true"></MudTextField>
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="@LoRaDevice.AppKey" Label="OTAA App Key" Validation="@(LoraValidator.ValidateValue)" For="@(() => LoRaDevice.AppKey)" Variant="Variant.Outlined" Required="true"></MudTextField>
                            </MudItem>
                        }
                        else
                        {
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="@LoRaDevice.AppSKey" Label="APB App SKey" For="@(() => LoRaDevice.AppSKey)" Variant="Variant.Outlined" Required="true"></MudTextField>
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="@LoRaDevice.NwkSKey" Label="APB Nwk SKey" For="@(() => LoRaDevice.NwkSKey)" Variant="Variant.Outlined" Required="true"></MudTextField>
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="@LoRaDevice.DevAddr" Label="DevAddr" For="@(() => LoRaDevice.DevAddr)" Variant="Variant.Outlined" Required="true"></MudTextField>
                            </MudItem>
                        }
                    </MudGrid>
                </MudItem>
                <MudItem md="6" xs="12">
                    <MudGrid>
                        <MudItem xs="12">
                            <MudGrid>
                                <MudItem md="3" xs="6">
                                    <MudSelect id="@nameof(LoRaDevice.ClassType)"
                                               Disabled="true"
                                               @bind-Value="@LoRaDevice.ClassType"
                                               Label="Type"
                                               Variant="Variant.Text"
                                               For="@(()=> LoRaDevice.ClassType)"
                                               Required="true">
                                        @foreach (ClassType item in Enum.GetValues(typeof(ClassType)))
                                        {
                                            <MudSelectItem Value="@item">@item</MudSelectItem>
                                        }
                                    </MudSelect>
                                </MudItem>
                                <MudItem md="3" xs="6">
                                    <MudSelect Disabled="true"
                                               @bind-Value="@LoRaDevice.Deduplication"
                                               For="@(() => LoRaDevice.Deduplication)"
                                               AnchorOrigin="Origin.BottomCenter"
                                               Label="Message Deduplication"
                                               Variant="Variant.Text">
                                        @foreach (DeduplicationMode item in Enum.GetValues(typeof(DeduplicationMode)))
                                        {
                                            <MudSelectItem Value="@item">@item</MudSelectItem>
                                        }
                                    </MudSelect>
                                </MudItem>
                            </MudGrid>
                        </MudItem>
                        <MudItem md="6" xs="12">
                            <MudTextField @bind-Value="@LoRaDevice.GatewayID" Label="Gateway Id" For="@(() => LoRaDevice.GatewayID)" Variant="Variant.Outlined"></MudTextField>
                        </MudItem>
                    </MudGrid>
                </MudItem>
            </MudGrid>
        </MudCardContent>
        <MudCardActions Class="pb-4 pl-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="OnSaveClick">Save Changes</MudButton>
        </MudCardActions>
    </MudCard>
</MudItem>

<MudItem xs="12">
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>
                <MudText>Reported properties</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudGrid>
                <MudItem xs="12" md="6">                    
                    <MudText Typo=Typo.h5 Class="mb-4">Adaptive DataRate</MudText>
                    <MudGrid>
                        <MudItem md="6" xs="12">
                            <MudTextField T="string" @bind-Text="@LoRaDevice.DataRate" Label="Device Current Datarate" Variant="Variant.Text" ReadOnly="true" />
                        </MudItem>
                        <MudItem md="6" xs="12">
                            <MudTextField T="string" @bind-Text="@LoRaDevice.TxPower" Label="Device Current Transmit Power" Variant="Variant.Text" ReadOnly="true" />
                        </MudItem>
                        <MudItem md="6" xs="12">
                            <MudTextField T="string" @bind-Text="@LoRaDevice.NbRep" Label="Device Current repetition when transmitting" Variant="Variant.Text" ReadOnly="true" />
                        </MudItem>
                    </MudGrid>
                </MudItem>
                <MudItem xs="12" md="6">                    
                    <MudText Typo=Typo.h5 Class="mb-4">Receive Windows</MudText>
                    <MudGrid>
                        <MudItem md="6" xs="12">
                            <MudTextField T="string" @bind-Text="@LoRaDevice.ReportedRX1DROffset" Label="Device Current RX1DROffset" Variant="Variant.Text" ReadOnly="true" />
                        </MudItem>
                        <MudItem md="6" xs="12">
                            <MudTextField T="string" @bind-Text="@LoRaDevice.ReportedRX2DataRate" Label="Device Current Rx2Datarate" Variant="Variant.Text" ReadOnly="true" />
                        </MudItem>
                        <MudItem md="6" xs="12">
                            <MudTextField T="string" @bind-Text="@LoRaDevice.ReportedRXDelay" Label="Device Current RXDelay" Variant="Variant.Text" ReadOnly="true" />
                        </MudItem>
                    </MudGrid>
                </MudItem>
            </MudGrid>
        </MudCardContent>
    </MudCard>
</MudItem>

<MudItem xs="12">
    <MudTable Items="@Commands" Dense=true Hover=true Bordered=true Striped=true>
        <ToolBarContent>
            <MudText Typo="Typo.h6">Commands</MudText>
            <MudSpacer />
            @if (!LoRaDevice.AlreadyLoggedInOnce)
            {
                <MudText Typo="Typo.caption" style="color: red">Device hasn't joined the network. You cannot send command at this moment.</MudText>
            }
        </ToolBarContent>
        <ColGroup>
            <col style="width: 70%;" />
            <col style="width: 30%;" />
        </ColGroup>
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh Style="text-align: center">Execute</MudTh>
        </HeaderContent>
        <RowTemplate Context="CommandContext">
            <MudTd DataLabel="Name" Style="word-break: break-all;">
                @CommandContext.Name
            </MudTd>
            <MudTd Style="text-align: center">
                <MudIconButton Title="Execute" Color="Color.Default" Disabled="!LoRaDevice.AlreadyLoggedInOnce" Icon="@Icons.Material.Filled.Send" Size="Size.Medium" OnClick="@(() => ExecuteMethod(CommandContext))"></MudIconButton>
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudItem>

@code {
    [Parameter]
    public LoRaDeviceDetails LoRaDevice { get; set; }

    [Parameter]
    public LoRaDeviceDetailsValidator LoraValidator { get; set; }

    [Parameter]
    public IEnumerable<DeviceModelCommand> Commands { get; set; }

    [Parameter]
    public EventCallback OnSaveClick { get; set; }

    [Parameter]
    public EventCallback OnDeleteClick { get; set; }

    private async Task ExecuteMethod(DeviceModelCommand method)
    {
        var result = await Http.PostAsJsonAsync($"api/lorawan/devices/{LoRaDevice.DeviceID}/_command/{method.Name}", method);

        if (result.IsSuccessStatusCode)
        {
            Snackbar.Add($"{method.Name} has been successfully executed!",
                Severity.Success);
        }
        else
        {
            Snackbar.Add(await result.Content.ReadAsStringAsync(), Severity.Error, (option) => { option.VisibleStateDuration = 1000; });
        }
    }
}
