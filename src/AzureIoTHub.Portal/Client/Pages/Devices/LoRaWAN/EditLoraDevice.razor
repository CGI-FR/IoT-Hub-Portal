@using AzureIoTHub.Portal.Client.Validators
@using AzureIoTHub.Portal.Shared.Models.V10.LoRaWAN.LoRaDevice
@using AzureIoTHub.Portal.Shared.Models.V10.LoRaWAN.LoRaDeviceModel

@inject HttpClient Http
@inject ISnackbar Snackbar

<MudItem xs="12">
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>
                <MudText>LoRaWAN</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudGrid>
                @if (LoRaDevice.UseOTAA)
                {
                <MudItem xs="12" md="6">
                    <MudTextField @bind-Value="@LoRaDevice.AppEUI" Label="OTAA App EUI" For="@(() => LoRaDevice.AppEUI)" ReadOnly="true" Margin="Margin.Dense" Variant="Variant.Outlined" Required="true"></MudTextField>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField @bind-Value="@LoRaDevice.AppKey" Label="OTAA App Key" Validation="@(LoraValidator.ValidateValue)" For="@(() => LoRaDevice.AppKey)" Margin="Margin.Dense" Variant="Variant.Outlined" Required="true"></MudTextField>
                </MudItem>
                }
                else
                {
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="@LoRaDevice.AppSKey" Label="APB App SKey" For="@(() => LoRaDevice.AppSKey)" Margin="Margin.Dense" Variant="Variant.Outlined" Required="true"></MudTextField>
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="@LoRaDevice.NwkSKey" Label="APB Nwk SKey" For="@(() => LoRaDevice.NwkSKey)" Margin="Margin.Dense" Variant="Variant.Outlined" Required="true"></MudTextField>
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="@LoRaDevice.DevAddr" Label="DevAddr" For="@(() => LoRaDevice.DevAddr)" Margin="Margin.Dense" Variant="Variant.Outlined" Required="true"></MudTextField>
                     </MudItem>
                }
                <MudItem xs="12">
                    <MudTextField @bind-Value="@LoRaDevice.GatewayID" Label="Gateway Id" For="@(() => LoRaDevice.GatewayID)" Margin="Margin.Dense" Variant="Variant.Outlined"></MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="@LoRaDevice.SensorDecoder" Label="Sensor Decoder URL" For="@(() => LoRaDevice.SensorDecoder)" Margin="Margin.Dense" Variant="Variant.Outlined"></MudTextField>
                </MudItem>
             </MudGrid>
             <MudGrid>
                <MudItem xs="12">
                    <MudSwitch T=bool? @bind-Checked="@LoRaDevice.Downlink" For="@(() => LoRaDevice.Downlink)" Label="Enable/disable downstream messages" Color="Color.Primary"  ></MudSwitch>
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudNumericField T="int?" @bind-Value="@LoRaDevice.PreferredWindow" For="@(() => LoRaDevice.PreferredWindow)" Min="1" Max="2" Label="Preferred receive window"></MudNumericField>
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudSelect T=string @bind-Value="@LoRaDevice.Deduplication" For="@(() => LoRaDevice.Deduplication)" AnchorOrigin="Origin.BottomCenter" Label="Message Deduplication">
                        <MudSelectItem Value="@("Mark")"></MudSelectItem>
                        <MudSelectItem Value="@("Drop")"></MudSelectItem>
                        <MudSelectItem Value="@("None")"></MudSelectItem>
                    </MudSelect>
                </MudItem>

                <MudItem xs="12">
                    <MudTextField T="int?" @bind-Value="@LoRaDevice.RX1DROffset" For="@(() => LoRaDevice.RX1DROffset)" Label="RX1 Datarate Offset" Margin="Margin.Dense" Variant="Variant.Outlined"></MudTextField>
                </MudItem>

                <MudItem xs="12">
                    <MudTextField T=int? @bind-Value="@LoRaDevice.RX2DataRate" For="@(() => LoRaDevice.RX2DataRate)" Label="RX2 Datarate" Margin="Margin.Dense" Variant="Variant.Outlined"></MudTextField>
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudNumericField T="int?" @bind-Value="@LoRaDevice.RXDelay" For="@(() => LoRaDevice.RXDelay)" Min=1 Label="RX Delay"></MudNumericField>
                </MudItem>

                <MudItem xs="12">
                    <MudSwitch T="bool?" @bind-Checked="@LoRaDevice.ABPRelaxMode" For="@(() => LoRaDevice.ABPRelaxMode)" Label="Disable ABP relax mode" Color="Color.Primary" ></MudSwitch>
                </MudItem>

                <MudItem xs="12">
                    <MudSwitch T="bool?" @bind-Checked="@LoRaDevice.Supports32BitFCnt" For="@(() => LoRaDevice.Supports32BitFCnt)" Label="32bit counter support" Color="Color.Primary" ></MudSwitch>
                </MudItem>

                <MudItem xs="12" md="4">
                    <MudNumericField T="int?" @bind-Value="@LoRaDevice.FCntUpStart" For="@(() => LoRaDevice.FCntUpStart)" Min=1 Label="Specify frame counter up start value"></MudNumericField>
                </MudItem>

                <MudItem xs="12" md="4">
                    <MudNumericField @bind-Value="@LoRaDevice.FCntDownStart" For="@(() => LoRaDevice.FCntDownStart)" Min=1 Label="Specify frame counter down start value"></MudNumericField>
                </MudItem>

                <MudItem xs="12" md="4">
                    <MudNumericField T="int?" @bind-Value="@LoRaDevice.FCntResetCounter" For="@(() => LoRaDevice.FCntResetCounter)" Min=1 Label="Reset counter"></MudNumericField>
                </MudItem>

                <MudItem xs="12" md="4">
                    <MudNumericField T="int?" @bind-Value="@LoRaDevice.KeepAliveTimeout" For="@(() => LoRaDevice.KeepAliveTimeout)" Min=1 Label="Device Connection Timeout"></MudNumericField>
                </MudItem>
            </MudGrid>
        </MudCardContent>
        <MudCardActions Class="pb-4 pl-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="OnSaveClick">Save Changes</MudButton>
        </MudCardActions>
    </MudCard>
</MudItem>

<MudItem xs="12">
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>
                <MudText>Reported properties</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField T="string" @bind-Text="@LoRaDevice.DataRate" Label="Data rate" Margin="Margin.Dense" Variant="Variant.Outlined" ReadOnly="true"></MudTextField>
                </MudItem>

                <MudItem xs="12">
                    <MudTextField T="string" @bind-Text="@LoRaDevice.TxPower" Label="TxPower" Margin="Margin.Dense" Variant="Variant.Outlined" ReadOnly="true"></MudTextField>
                </MudItem>

                <MudItem xs="12">
                    <MudTextField T="string" @bind-Text="@LoRaDevice.NbRep" Label="NbRep" Margin="Margin.Dense" Variant="Variant.Outlined" ReadOnly="true"></MudTextField>
                </MudItem>

                <MudItem xs="12">
                    <MudTextField T="string" @bind-Text="@LoRaDevice.ReportedRX1DROffset" Label="Reported RX1DR Offset" Margin="Margin.Dense" Variant="Variant.Outlined" ReadOnly="true"></MudTextField>
                </MudItem>

                <MudItem xs="12">
                    <MudTextField T="string" @bind-Text="@LoRaDevice.ReportedRX2DataRate" Label="Reported RX2 Data Rate" Margin="Margin.Dense" Variant="Variant.Outlined" ReadOnly="true"></MudTextField>
                </MudItem>

                <MudItem xs="12">
                    <MudTextField T="string" @bind-Text="@LoRaDevice.ReportedRXDelay" Label="Reported RX Delay" Margin="Margin.Dense" Variant="Variant.Outlined" ReadOnly="true"></MudTextField>
                </MudItem>
            </MudGrid>
        </MudCardContent>
    </MudCard>
</MudItem>

<MudItem xs="12">
    <MudTable Items="@Commands" Dense=true Hover=true Bordered=true Striped=true>
        <ToolBarContent>
            <MudText Typo="Typo.h6">Commands</MudText>
            <MudSpacer />
            @if (!LoRaDevice.AlreadyLoggedInOnce)
            {
                    <MudText Typo="Typo.caption" style="color: red">Device hasn't joined the network. You cannot send command at this moment.</MudText>
            }
        </ToolBarContent>
        <ColGroup>
            <col style="width: 70%;" />
            <col style="width: 30%;" />
        </ColGroup>
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh Style="text-align: center">Execute</MudTh>
        </HeaderContent>
        <RowTemplate Context="CommandContext">
            <MudTd DataLabel="Name" Style="word-break: break-all;">
                @CommandContext.Name
            </MudTd>
            <MudTd Style="text-align: center">
                <MudIconButton Title="Execute" Color="Color.Default" Disabled="!LoRaDevice.AlreadyLoggedInOnce" Icon="@Icons.Material.Filled.Send" Size="Size.Medium" OnClick="@(() => ExecuteMethod(CommandContext))"></MudIconButton>
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudItem>

@code {
    [Parameter]
    public LoRaDeviceDetails LoRaDevice { get; set; }

    [Parameter]
    public LoRaDeviceDetailsValidator LoraValidator { get; set; }

    [Parameter]
    public IEnumerable<DeviceModelCommand> Commands { get; set; }

    [Parameter]
    public EventCallback OnSaveClick { get; set; }

    [Parameter]
    public EventCallback OnDeleteClick { get; set; }

    private async Task ExecuteMethod(DeviceModelCommand method)
    {
        var result = await Http.PostAsJsonAsync($"api/lorawan/devices/{LoRaDevice.DeviceID}/_command/{method.Name}", method);

        if (result.IsSuccessStatusCode)
        {
            Snackbar.Add($"{method.Name} has been successfully executed!",
                Severity.Success);
        }
        else
        {
            Snackbar.Add(await result.Content.ReadAsStringAsync(), Severity.Error, (option) => { option.VisibleStateDuration = 1000; });
        }
    }
}
