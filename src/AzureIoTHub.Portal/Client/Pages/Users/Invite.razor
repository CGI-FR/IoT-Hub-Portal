@page "/users/invite"
@using Microsoft.AspNetCore.Authorization
@using Blazored.Modal
@using Blazored.Modal.Services

@using AzureIoTHub.Portal.Shared.Security
@using AzureIoTHub.Portal.Shared.UserManagement
@inject HttpClient Http
@inject IJSRuntime JS

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">

            <div class="card">
                <div class="card-header card-header-primary">
                    <h4 class="card-title">Invite User</h4>
                    <p class="card-category">Complete the invitation</p>
                </div>
                <div class="card-body">
                    <EditForm Model="@model" OnValidSubmit="@HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="row">
                            <div class="col-md-12">
                                <label class="bmd-label-floating">Username</label>
                                <InputText id="name" @bind-Value="model.UserDisplayName" class="form-control" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <label class="bmd-label-floating">Email</label>
                                <InputText id="email" @bind-Value="model.UserEmail" class="form-control" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <label class="bmd-label-floating">Role</label>
                                <InputText id="email" @bind-Value="model.Role" class="form-control" />
                            </div>
                        </div>
                        <div class="row">
                            <button type="submit" class="btn btn-primary pull-right">Submit</button>
                            <div class="clearfix"></div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    UserInvitation model = new UserInvitation();

    private async Task HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync("api/Users/Invite", model);

        if (response.IsSuccessStatusCode)
        {
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));

            var notification = new
            {
                type = "success",
                title = "User Invitation",
                message = $"Successfully sent invitation to {model.UserEmail}"
            };

            await JS.InvokeVoidAsync("$.notify", notification);
        }
    }
}
