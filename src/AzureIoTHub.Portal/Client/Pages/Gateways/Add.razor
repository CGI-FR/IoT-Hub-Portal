@page "/gateways/add"
@using Microsoft.AspNetCore.Authorization
@using AzureIoTHub.Portal.Shared.Models;

@inject HttpClient Http
@inject ISnackbar Snackbar

<div class="Add-dialog">
    <MudDialog>
        <DialogContent>
            <EditForm Model="@gateway" OnValidSubmit="OnValidation">
                <DataAnnotationsValidator />
                <MudCard>
                    <MudCardContent>
                        <MudTextField Style="width:300px" Class="add-dialog-input" Label="* Name :" @bind-Value="gateway.DeviceId" For="@(() => gateway.DeviceId)" />
                        <MudSelect Style="width:300px" Class="add-dialog-input"  @bind-Value="gateway.Type" Placeholder="Please Select the type" OffsetY="true" AdornmentColor="Color.Primary">
                            <MudSelectItem Style="width:300px" Value="@("lora")">Lora</MudSelectItem>
                            <MudSelectItem Value="@("unknow")">Unknow</MudSelectItem>
                        </MudSelect>
                        <MudSelect Style="width:300px" Class="add-dialog-input" @bind-Value="gateway.Environment" Placeholder="Please Select the environement" OffsetY="true" AdornmentColor="Color.Primary">
                            <MudSelectItem Value="@("dev")">Développement</MudSelectItem>
                            <MudSelectItem Value="@("prod")">Production</MudSelectItem>
                            <MudSelectItem Value="@("indus")">Industrie</MudSelectItem>
                        </MudSelect>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Create</MudButton>
                    </MudCardActions>
                </MudCard>
            </EditForm>

        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
        </DialogActions>
    </MudDialog>
</div>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    private Gateway gateway = new Gateway();

    void Cancel() => MudDialog.Cancel();

    private async Task OnValidation()
    {
        var result = await Http.PostAsJsonAsync("api/Gateways", gateway);

        if (result.IsSuccessStatusCode)
        {
            Snackbar.Add($"Device has been successfully created !", Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Snackbar.Add($"Something went wrong while creating device ... ", Severity.Error);
            return;
        }
    }
}
