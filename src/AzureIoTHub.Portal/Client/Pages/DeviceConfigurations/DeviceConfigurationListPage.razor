@page "/device-configurations"
@using Microsoft.AspNetCore.Authorization
@using AzureIoTHub.Portal.Models.v10

@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager navigationManager


<MudGrid>
    <MudItem xs="12">
        <MudTable T="ConfigListItem" id="device-configurations-listing" Items=@result Loading="IsLoading" Dense=true Breakpoint="Breakpoint.Sm" Hover=true Bordered=true Striped=true  OnRowClick="OnRowClick">
            <ColGroup>
                <col style="width: 20%;" />
                <col style="width: 20%;" />
                <col style="width: 12%;" />
                <col style="width: 18%;" />
                <col style="width: 4%;" />
                <col style="width: 4%;" />
                <col style="width: 4%;" />
            </ColGroup>
            <ToolBarContent>
                <MudText Typo="Typo.h6">Device configurations</MudText>
                <MudSpacer />
                <MudIconButton Icon="@Icons.Material.Filled.Refresh" OnClick=LoadConfigurations Size="Size.Medium" id="tableRefreshButton" Class="ma-2"></MudIconButton>
                <MudFab Color="Color.Secondary" Icon="@Icons.Material.Filled.Add" Size="Size.Medium" OnClick="AddDevice" id="addDeviceButton" />
            </ToolBarContent>
            <HeaderContent>
                <MudTh>ID</MudTh>
                <MudTh Style="text-align: center">Conditions</MudTh>
                <MudTh Style="text-align: center">System Metrics</MudTh>
                <MudTh Style="text-align: center">Device Metrics</MudTh>
                <MudTh Style="text-align: center">Priority</MudTh>
                <MudTh Style="text-align: center">Creation date</MudTh>
                <MudTh Style="text-align: center">Detail</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="ID" Style="word-break: break-all;">
                    @context.ConfigurationID
                </MudTd>
                <MudTd DataLabel="Conditions" Style="word-break: break-all; ">
                    @context.Conditions
                </MudTd>
                <MudTd DataLabel="System Metrics" Style="text-align: center;">
                    @context.MetricsTargeted targeted<br />
                    @context.MetricsApplied applied <br />
                </MudTd>
                <MudTd DataLabel="Device Metrics" Style="text-align: center;">
                    @context.MetricsSuccess reporting success <br />
                    @context.MetricsFailure reporting failure <br />
                </MudTd>
                <MudTd DataLabel="Priority" Style="text-align: center">@context.Priority</MudTd>
                <MudTd DataLabel="Creation date" Style="text-align: center;">@context.CreationDate</MudTd>
                <MudTd DataLabel="Details" Style="text-align: center">
                    <MudIconButton Icon="@Icons.Filled.Visibility" Color="Color.Default" />
                </MudTd>
            </RowTemplate>
            <NoRecordsContent>
                <MudText>No matching records found</MudText>
            </NoRecordsContent>
            <LoadingContent>
                <MudText>Loading...</MudText>
            </LoadingContent>
            <PagerContent>
                <MudTablePager DisableRowsPerPage=true />
            </PagerContent>
        </MudTable>
    </MudItem>
</MudGrid>

@code {
    [CascadingParameter]
    public Error Error {get; set;}
    
    private readonly List<ConfigListItem> result = new();
    private bool IsLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadConfigurations();
    }

    private async Task LoadConfigurations()
    {
        try
        {
            IsLoading = true;

            result.Clear();
            result.AddRange(await Http.GetFromJsonAsync<ConfigListItem[]>("/api/device-configurations") ?? throw new InvalidOperationException());
        }
        catch (ProblemDetailsException exception)
        {
            Error?.ProcessProblemDetails(exception);
        }
        finally
        {
            IsLoading = false;
        }
    }

    private void AddDevice()
    {
        navigationManager.NavigateTo("/device-configurations/new");
    }


    private void OnRowClick(TableRowClickEventArgs<ConfigListItem> e)
    {
        navigationManager.NavigateTo($"/device-configurations/{e.Item.ConfigurationID}");
    }
}
