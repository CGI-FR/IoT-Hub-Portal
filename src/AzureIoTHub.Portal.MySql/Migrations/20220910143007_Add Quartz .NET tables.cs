// Copyright (c) CGI France. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

#nullable disable

namespace AzureIoTHub.Portal.MySql.Migrations
{
    using Microsoft.EntityFrameworkCore.Migrations;

    public partial class AddQuartzNETtables : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            _ = migrationBuilder.Sql("DROP TABLE IF EXISTS qrtz_fired_triggers;\r\nDROP TABLE IF EXISTS qrtz_paused_trigger_grps;\r\nDROP TABLE IF EXISTS qrtz_scheduler_state;\r\nDROP TABLE IF EXISTS qrtz_locks;\r\nDROP TABLE IF EXISTS qrtz_simprop_triggers;\r\nDROP TABLE IF EXISTS qrtz_simple_triggers;\r\nDROP TABLE IF EXISTS qrtz_cron_triggers;\r\nDROP TABLE IF EXISTS qrtz_blob_triggers;\r\nDROP TABLE IF EXISTS qrtz_triggers;\r\nDROP TABLE IF EXISTS qrtz_job_details;\r\nDROP TABLE IF EXISTS qrtz_calendars;\r\n\r\n\r\nCREATE TABLE qrtz_job_details\r\n  (\r\n    sched_name VARCHAR(120) NOT NULL,\r\n\tjob_name  VARCHAR(200) NOT NULL,\r\n    job_group VARCHAR(200) NOT NULL,\r\n    description VARCHAR(250) NULL,\r\n    job_class_name   VARCHAR(250) NOT NULL, \r\n    is_durable BOOLEAN NOT NULL,\r\n    is_nonconcurrent BOOLEAN NOT NULL,\r\n    is_update_data BOOLEAN NOT NULL,\r\n\trequests_recovery BOOLEAN NOT NULL,\r\n    job_data BLOB NULL,\r\n    PRIMARY KEY (sched_name,job_name,job_group)\r\n)ENGINE=InnoDB;\r\n\r\nCREATE TABLE qrtz_triggers\r\n  (\r\n    sched_name VARCHAR(120) NOT NULL,\r\n\ttrigger_name VARCHAR(200) NOT NULL,\r\n    trigger_group VARCHAR(200) NOT NULL,\r\n    job_name  VARCHAR(200) NOT NULL, \r\n    job_group VARCHAR(200) NOT NULL,\r\n    description VARCHAR(250) NULL,\r\n    next_fire_time BIGINT(13) NULL,\r\n    prev_fire_time BIGINT(13) NULL,\r\n    priority INTEGER NULL,\r\n    trigger_state VARCHAR(16) NOT NULL,\r\n    trigger_type VARCHAR(8) NOT NULL,\r\n    start_time BIGINT(13) NOT NULL,\r\n    end_time BIGINT(13) NULL,\r\n    calendar_name VARCHAR(200) NULL,\r\n    misfire_instr SMALLINT(2) NULL,\r\n    job_data BLOB NULL,\r\n    PRIMARY KEY (sched_name,trigger_name,trigger_group),\r\n    FOREIGN KEY (sched_name,job_name,job_group) \r\n\t\tREFERENCES qrtz_job_details(sched_name,job_name,job_group) \r\n)ENGINE=InnoDB;\r\n\r\nCREATE TABLE qrtz_simple_triggers\r\n  (\r\n    sched_name VARCHAR(120) NOT NULL,\r\n\ttrigger_name VARCHAR(200) NOT NULL,\r\n    trigger_group VARCHAR(200) NOT NULL,\r\n    repeat_count BIGINT(7) NOT NULL,\r\n    repeat_interval BIGINT(12) NOT NULL,\r\n    times_triggered BIGINT(10) NOT NULL,\r\n    PRIMARY KEY (sched_name,trigger_name,trigger_group),\r\n    FOREIGN KEY (sched_name,trigger_name,trigger_group) \r\n\t\tREFERENCES qrtz_triggers(sched_name,trigger_name,trigger_group)\r\n)ENGINE=InnoDB;\r\n\r\nCREATE TABLE qrtz_simprop_triggers \r\n  (\r\n    sched_name VARCHAR(120) NOT NULL,\r\n    trigger_name VARCHAR(200) NOT NULL ,\r\n    trigger_group VARCHAR(200) NOT NULL ,\r\n    str_prop_1 VARCHAR(512) NULL,\r\n    str_prop_2 VARCHAR(512) NULL,\r\n    str_prop_3 VARCHAR(512) NULL,\r\n    int_prop_1 INT NULL,\r\n    int_prop_2 INT NULL,\r\n    long_prop_1 BIGINT NULL,\r\n    long_prop_2 BIGINT NULL,\r\n    dec_prop_1 NUMERIC(13,4) NULL,\r\n    dec_prop_2 NUMERIC(13,4) NULL,\r\n    bool_prop_1 BOOLEAN NULL,\r\n    bool_prop_2 BOOLEAN NULL,\r\n\tPRIMARY KEY (sched_name,trigger_name,trigger_group),\r\n    FOREIGN KEY (sched_name,trigger_name,trigger_group) \r\n\t\tREFERENCES qrtz_triggers(sched_name,trigger_name,trigger_group)\r\n)ENGINE=InnoDB;\r\n\r\nCREATE TABLE qrtz_cron_triggers\r\n  (\r\n    sched_name VARCHAR(120) NOT NULL,\r\n    trigger_name VARCHAR(200) NOT NULL,\r\n    trigger_group VARCHAR(200) NOT NULL,\r\n    cron_expression VARCHAR(120) NOT NULL,\r\n    time_zone_id VARCHAR(80),\r\n    PRIMARY KEY (sched_name,trigger_name,trigger_group),\r\n    FOREIGN KEY (sched_name,trigger_name,trigger_group) \r\n\t\tREFERENCES qrtz_triggers(sched_name,trigger_name,trigger_group)\r\n)ENGINE=InnoDB;\r\n\r\nCREATE TABLE qrtz_blob_triggers\r\n  (\r\n    sched_name VARCHAR(120) NOT NULL,\r\n    trigger_name VARCHAR(200) NOT NULL,\r\n    trigger_group VARCHAR(200) NOT NULL,\r\n    blob_data BLOB NULL,\r\n    PRIMARY KEY (sched_name,trigger_name,trigger_group),\r\n    INDEX (sched_name,trigger_name,trigger_group),\r\n    FOREIGN KEY (sched_name,trigger_name,trigger_group) \r\n\t\tREFERENCES qrtz_triggers(sched_name,trigger_name,trigger_group)\r\n)ENGINE=InnoDB;\r\n\r\nCREATE TABLE qrtz_calendars\r\n  (\r\n    sched_name VARCHAR(120) NOT NULL,\r\n    calendar_name  VARCHAR(200) NOT NULL, \r\n    calendar BLOB NOT NULL,\r\n    PRIMARY KEY (sched_name,calendar_name)\r\n)ENGINE=InnoDB;\r\n\r\nCREATE TABLE qrtz_paused_trigger_grps\r\n  (\r\n    sched_name VARCHAR(120) NOT NULL,\r\n    trigger_group VARCHAR(200) NOT NULL, \r\n    PRIMARY KEY (sched_name,trigger_group)\r\n)ENGINE=InnoDB;\r\n\r\nCREATE TABLE qrtz_fired_triggers \r\n  (\r\n    sched_name VARCHAR(120) NOT NULL,\r\n    entry_id VARCHAR(95) NOT NULL,\r\n    trigger_name VARCHAR(200) NOT NULL,\r\n    trigger_group VARCHAR(200) NOT NULL,\r\n    instance_name VARCHAR(200) NOT NULL,\r\n    fired_time BIGINT(13) NOT NULL,\r\n\tsched_time BIGINT(13) NOT NULL,\r\n    priority INTEGER NOT NULL,\r\n    state VARCHAR(16) NOT NULL,\r\n    job_name VARCHAR(200) NULL,\r\n    job_group VARCHAR(200) NULL,\r\n    is_nonconcurrent BOOLEAN NOT NULL,\r\n    requests_recovery BOOLEAN NULL,\r\n    PRIMARY KEY (sched_name,entry_id)\r\n)ENGINE=InnoDB;\r\n\r\nCREATE TABLE qrtz_scheduler_state \r\n  (\r\n    sched_name VARCHAR(120) NOT NULL,\r\n    instance_name VARCHAR(200) NOT NULL,\r\n    last_checkin_time BIGINT(13) NOT NULL,\r\n    checkin_interval BIGINT(13) NOT NULL,\r\n    PRIMARY KEY (sched_name,instance_name)\r\n)ENGINE=InnoDB;\r\n\r\nCREATE TABLE qrtz_locks\r\n  (\r\n    sched_name VARCHAR(120) NOT NULL,\r\n    lock_name  VARCHAR(40) NOT NULL, \r\n    PRIMARY KEY (sched_name,lock_name)\r\n)ENGINE=InnoDB;\r\n\r\ncreate index idx_qrtz_j_req_recovery on qrtz_job_details(sched_name,requests_recovery);\r\ncreate index idx_qrtz_j_grp on qrtz_job_details(sched_name,job_group);\r\ncreate index idx_qrtz_t_j on qrtz_triggers(sched_name,job_name,job_group);\r\ncreate index idx_qrtz_t_jg on qrtz_triggers(sched_name,job_group);\r\ncreate index idx_qrtz_t_c on qrtz_triggers(sched_name,calendar_name);\r\ncreate index idx_qrtz_t_g on qrtz_triggers(sched_name,trigger_group);\r\ncreate index idx_qrtz_t_state on qrtz_triggers(sched_name,trigger_state);\r\ncreate index idx_qrtz_t_n_state on qrtz_triggers(sched_name,trigger_name,trigger_group,trigger_state);\r\ncreate index idx_qrtz_t_n_g_state on qrtz_triggers(sched_name,trigger_group,trigger_state);\r\ncreate index idx_qrtz_t_next_fire_time on qrtz_triggers(sched_name,next_fire_time);\r\ncreate index idx_qrtz_t_nft_st on qrtz_triggers(sched_name,trigger_state,next_fire_time);\r\ncreate index idx_qrtz_t_nft_misfire on qrtz_triggers(sched_name,misfire_instr,next_fire_time);\r\ncreate index idx_qrtz_t_nft_st_misfire on qrtz_triggers(sched_name,misfire_instr,next_fire_time,trigger_state);\r\ncreate index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(sched_name,misfire_instr,next_fire_time,trigger_group,trigger_state);\r\ncreate index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(sched_name,instance_name);\r\ncreate index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(sched_name,instance_name,requests_recovery);\r\ncreate index idx_qrtz_ft_j_g on qrtz_fired_triggers(sched_name,job_name,job_group);\r\ncreate index idx_qrtz_ft_jg on qrtz_fired_triggers(sched_name,job_group);\r\ncreate index idx_qrtz_ft_t_g on qrtz_fired_triggers(sched_name,trigger_name,trigger_group);\r\ncreate index idx_qrtz_ft_tg on qrtz_fired_triggers(sched_name,trigger_group);\r\n");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            _ = migrationBuilder.Sql("DROP TABLE IF EXISTS qrtz_fired_triggers;\r\nDROP TABLE IF EXISTS qrtz_paused_trigger_grps;\r\nDROP TABLE IF EXISTS qrtz_scheduler_state;\r\nDROP TABLE IF EXISTS qrtz_locks;\r\nDROP TABLE IF EXISTS qrtz_simprop_triggers;\r\nDROP TABLE IF EXISTS qrtz_simple_triggers;\r\nDROP TABLE IF EXISTS qrtz_cron_triggers;\r\nDROP TABLE IF EXISTS qrtz_blob_triggers;\r\nDROP TABLE IF EXISTS qrtz_triggers;\r\nDROP TABLE IF EXISTS qrtz_job_details;\r\nDROP TABLE IF EXISTS qrtz_calendars;\r\n");
        }
    }
}
