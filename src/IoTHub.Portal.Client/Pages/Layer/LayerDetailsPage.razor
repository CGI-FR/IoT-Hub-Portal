@page "/layer/{LayerId}"

@using IoTHub.Portal.Client.Components.Layers
@using IoTHub.Portal.Shared.Models.v10

@inject ILayerClientService LayerClientService

<EditLayer layers=@SelectedLayers initLayers=InitLayers mode="Edit" />

@code {
    public HashSet<LayerHash> Layers { get; } = new HashSet<LayerHash> { };
    public HashSet<LayerHash> SelectedLayers { get; } = new HashSet<LayerHash> { };
    public HashSet<LayerHash> fullLayers { get; } = new HashSet<LayerHash> { };
    public List<LayerDto> InitLayers = new List<LayerDto>();

    [Parameter]
    public string? LayerId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        List<LayerDto> listLayers = await LayerClientService.GetLayers();
        InitLayers.AddRange(listLayers);
        OrderLayers(listLayers);

        SelectedLayers.Add(Layers.First(layer => layer.LayerData.Id == LayerId));
    }

    private void OrderLayers(List<LayerDto> layers)
    {
        if (layers.Count() == 0) return;

        LayerDto firstLayer = layers[0];
        bool isAdd = false;

        if (firstLayer.Father == "Init")
        {
            Layers.Add(new LayerHash(firstLayer, 0, false));
            isAdd = true;
        }
        // Look for the layer's father within Layer
        else isAdd = addSubLayer(Layers, firstLayer);

        // If the layer hasn't been added, place it at the end of the list to wait for its father to be added to "Layers"
        layers.RemoveAt(0);
        if (!isAdd) layers.Add(firstLayer);

        OrderLayers(layers);
    }

    private bool addSubLayer(HashSet<LayerHash> fatherLayer, LayerDto layer)
    {
        foreach (LayerHash father in fatherLayer)
        {
            if (father.LayerData.Id == layer.Father)
            {
                father.Children.Add(new LayerHash(layer, father.Level + 1, false));

                // If father has been found, return true
                return true;
            }
            else
            {
                // Look for the layer's father within Layer
                bool isAdd = addSubLayer(father.Children, layer);

                // If father has been found, return true
                if (isAdd) return true;
            }
        }
        return false;
    }
}
