
<MudDialog DisableSidePadding="true">
    <DialogContent>
        <MudContainer Style="max-height: 600px; overflow-y: scroll">
            <MudGrid>
                <MudItem xs="12" md="4">
                    <MudTextField @bind-Value="@currentModuleName"
                                  id=@nameof(EdgeModelSystemModule.Name)
                                  Label="Module name"
                                  Variant="Variant.Outlined"
                                  For="@(()=> Module.Name)"
                                  Required="true" Disabled/>
                </MudItem>
                 <MudItem xs="12" md="2">
                     <MudTextField @bind-Value="@currentStartupOrder"
                                   id=@nameof(EdgeModelSystemModule.StartupOrder)
                                   Label="Startup Order"
                                   Variant="Variant.Outlined"
                                   For="@(() => Module.StartupOrder)"
                                   Required="false" />
                 </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField @bind-Value="@currentImage"
                                  id=@nameof(EdgeModelSystemModule.Image)
                                  Label="Image URI"
                                  Variant="Variant.Outlined"
                                  For="@(()=> Module.Image)"
                                  Required="true" />
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="@currentContainerCreateOptions"
                                  id=@nameof(EdgeModelSystemModule.ContainerCreateOptions)
                                  Label="Container Create Options"
                                  Variant="Variant.Outlined"
                                  For="@(()=> Module.ContainerCreateOptions)" Lines="8" />
                </MudItem>
                <MudItem xs="12">
                    <MudAlert Severity="Severity.Info"><MudLink Href="https://learn.microsoft.com/en-us/azure/iot-edge/how-to-use-create-options" Target="_blank ">How to configure container create options for IoT Edge modules</MudLink></MudAlert>
                </MudItem>
            </MudGrid>

            <MudTabs Elevation="1" Class="mt-10" Rounded="true" PanelClass="mt-6">

                <MudTabPanel Text="Environment variables">
                    <ModuleDialogTab1 EnvironmentVariables="@currentEnvironmentVariables" />
                </MudTabPanel>

            </MudTabs>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton id="SubmitButton" Color="Color.Primary" OnClick="Submit">OK</MudButton>
    </DialogActions>
</MudDialog>

 @code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter]
    public EdgeModelSystemModule Module { get; set; } = default!;

    private string currentModuleName = default!;
    private string currentImage = default!;
    private string currentContainerCreateOptions = default!;
    private int currentStartupOrder;

    private List<IoTEdgeModuleEnvironmentVariable> currentEnvironmentVariables = new();

    public bool IsLoading;

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        currentModuleName = Module.Name;
        currentImage = Module.Image;
        currentContainerCreateOptions = Module.ContainerCreateOptions;
        currentStartupOrder = Module.StartupOrder;
        currentEnvironmentVariables = new List<IoTEdgeModuleEnvironmentVariable>(Module.EnvironmentVariables.ToArray());
        await Task.Delay(0);
        IsLoading = false;
    }

    public void Submit()
    {
        Module.Name = currentModuleName;
        Module.Image = currentImage;
        Module.ContainerCreateOptions = currentContainerCreateOptions;
        Module.StartupOrder = currentStartupOrder;
        Module.EnvironmentVariables = new List<IoTEdgeModuleEnvironmentVariable>(currentEnvironmentVariables.ToArray());
        MudDialog.Close(DialogResult.Ok(true));
    }
}
