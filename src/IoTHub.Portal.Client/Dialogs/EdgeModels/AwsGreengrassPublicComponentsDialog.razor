@using IoTHub.Portal.Models.v10;

@inject IEdgeModelClientService EdgeModelClientService

<MudDialog>
    <DialogContent>
        <MudTable T="IoTEdgeModuleDto" Items="@publicComponents" MultiSelection="true" SelectOnRowClick="true"
            @bind-SelectedItems="selectedPublicComponents" Hover="true">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Version</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.ModuleName</MudTd>
                <MudTd DataLabel="Position">@context.Version</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[]{50, 100}" />
            </PagerContent>
        </MudTable>
    </DialogContent>
    <DialogActions>
        <MudButton id="greengrass-public-components-cancel" OnClick="Cancel">Cancel</MudButton>
        <MudButton id="greengrass-public-components-submit" Color="Color.Primary" OnClick="Submit">Submit</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter]
    public List<IoTEdgeModuleDto> EdgeModules { get; set; } = default!;

    private List<IoTEdgeModuleDto> publicComponents = new();
    private HashSet<IoTEdgeModuleDto> selectedPublicComponents = new HashSet<IoTEdgeModuleDto>();

    protected async override Task OnInitializedAsync()
    {
        publicComponents = await EdgeModelClientService.GetPublicEdgeModules();
        selectedPublicComponents = new HashSet<IoTEdgeModuleDto>(publicComponents.Where(m => EdgeModules.Any(e => m.Id.Equals(e.Id))));
    }

    private void Cancel() => MudDialog.Cancel();

    private void Submit()
    {
        EdgeModules.RemoveAll(e => !string.IsNullOrEmpty(e.Id));
        EdgeModules.AddRange(selectedPublicComponents.ToList());

        MudDialog.Close(DialogResult.Ok(true));
    }

}
