@using IoTHub.Portal.Security;
@using Microsoft.AspNetCore.Components.Authorization
@using IoTHub.Portal.Models.v10
@using Blazored.LocalStorage
@using IoTHub.Portal.Shared.Constants
@inject NavigationManager navigationManager
@inject PortalSettings Portal
@inject ILayoutService LayoutService

@implements IDisposable

<AuthorizeView>
    <Authorized>
        <MudNavMenu>
            <MudNavLink Href="/" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>

            <MudNavGroup Title="Devices" Icon="@Icons.Material.Outlined.Memory"
                         Expanded="@LayoutService.GetNavGroupExpanded("Devices")"
                         ExpandedChanged="@(b => LayoutService.SetNavGroupExpanded("Devices", b))">
                <MudPaper Class="d-flex align-center flex-grow-1 gap-4" Elevation="0">
                    <MudPaper Class="py-4 d-flex flex-1 mud-theme-primary"/><MudNavLink Href="/devices">Device List</MudNavLink>
                    <MudPaper Class="py-4 d-flex flex-1 mud-theme-secondary"/>
                    <MudTooltip Text="Add device">
                        <MudIconButton id="addDeviceButton" OnClick="AddDevice" Color="Color.Secondary" Icon="@Icons.Material.Filled.AddCircle" Size="Size.Small"/>
                    </MudTooltip>
                </MudPaper>

                <MudPaper Class="d-flex align-center flex-grow-1 gap-4" Elevation="0">
                    <MudPaper Class="py-4 d-flex flex-1 mud-theme-primary"/><MudNavLink Href="/device-models">Device Models</MudNavLink>
                    <MudPaper Class="py-4 d-flex flex-1 mud-theme-secondary"/>
                    <MudTooltip Text="Add device model">
                        <MudIconButton id="addDeviceModelButton" OnClick="AddDeviceModel" Color="Color.Secondary" Icon="@Icons.Material.Filled.AddCircle" Size="Size.Small"/>
                    </MudTooltip>
                </MudPaper>

                @if (Portal.CloudProvider.Equals(CloudProviders.Azure))
                {
                    <MudPaper Class="d-flex align-center flex-grow-1 gap-4" Elevation="0">
                        <MudPaper Class="py-4 d-flex flex-1 mud-theme-primary" /><MudNavLink Href="/device-configurations/">Configurations</MudNavLink>
                        <MudPaper Class="py-4 d-flex flex-1 mud-theme-secondary" />
                        <MudTooltip Text="Add device configuration">
                            <MudIconButton id="addDeviceConfigurationButton" OnClick="AddDeviceConfig" Color="Color.Secondary" Icon="@Icons.Material.Filled.AddCircle" Size="Size.Small" />
                        </MudTooltip>
                    </MudPaper>
                }
                
            </MudNavGroup>

            <MudNavGroup Title="IoT Edge" Icon="@Icons.Material.Outlined.DeveloperBoard"
                         Expanded="@LayoutService.GetNavGroupExpanded("IoTEdge")"
                         ExpandedChanged="@(b => LayoutService.SetNavGroupExpanded("IoTEdge", b))">
                <MudNavLink Href="/edge/devices">Devices</MudNavLink>
                <MudNavLink Href="/edge/models">Edge Models</MudNavLink>
            </MudNavGroup>

            <MudNavGroup Title="Site Management" Icon="@Icons.Material.Outlined.Business"
                         Expanded="@LayoutService.GetNavGroupExpanded("Site Management")"
                         ExpandedChanged="@(b => LayoutService.SetNavGroupExpanded("Site Management", b))">
                <MudNavLink Href="/layer">Layers</MudNavLink>
                <MudNavLink Href="/planning">Plannings</MudNavLink>
            </MudNavGroup>

            @if (Portal.IsLoRaSupported)
            {
                <MudNavGroup Title="LoRaWAN" Icon="@Icons.Material.Outlined.WifiTethering"
                             Expanded="@LayoutService.GetNavGroupExpanded("LoRaWAN")"
                             ExpandedChanged="@(b => LayoutService.SetNavGroupExpanded("LoRaWAN", b))">
                    <MudNavLink Href="/lorawan/concentrators">
                        Concentrators
                    </MudNavLink>
                </MudNavGroup>
            }

            <MudNavGroup Title="Settings" Icon="@Icons.Material.Outlined.Settings"
                         Expanded="@LayoutService.GetNavGroupExpanded("Settings")"
                         ExpandedChanged="@(b => LayoutService.SetNavGroupExpanded("Settings", b))">
                <MudNavLink Href="/settings/layers">Layers</MudNavLink>
                <MudNavLink Href="/settings/device-tag">Device Tags</MudNavLink>
            </MudNavGroup>
        </MudNavMenu>
    </Authorized>
</AuthorizeView>

@code {
    private void AddDevice() => navigationManager.NavigateTo("/devices/new");
    private void AddDeviceModel() => navigationManager.NavigateTo("/device-models/new");
    private void AddDeviceConfig() => navigationManager.NavigateTo("/device-configurations/new");

    protected override void OnInitialized()
    {
        LayoutService.MajorUpdateOccurred += LayoutServiceOnMajorUpdateOccurred!;
        base.OnInitialized();
    }

    public void Dispose()
    {
        LayoutService.MajorUpdateOccurred -= LayoutServiceOnMajorUpdateOccurred!;
    }

    private void LayoutServiceOnMajorUpdateOccurred(object sender, EventArgs e) => StateHasChanged();
}
